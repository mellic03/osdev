-------- readelf -a mouse.elf --------
ELF Header:
  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF64
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              DYN (Position-Independent Executable file)
  Machine:                           Advanced Micro Devices X86-64
  Version:                           0x1
  Entry point address:               0x1000
  Start of program headers:          64 (bytes into file)
  Start of section headers:          16056 (bytes into file)
  Flags:                             0x0
  Size of this header:               64 (bytes)
  Size of program headers:           56 (bytes)
  Number of program headers:         5
  Size of section headers:           64 (bytes)
  Number of section headers:         17
  Section header string table index: 16

Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
  [ 0]                   NULL             0000000000000000  00000000
       0000000000000000  0000000000000000           0     0     0
  [ 1] .text             PROGBITS         0000000000001000  00001000
       0000000000000a07  0000000000000000  AX       0     0     1
  [ 2] .rodata           PROGBITS         0000000000002000  00002000
       0000000000000016  0000000000000000   A       0     0     2
  [ 3] .interp           PROGBITS         0000000000002016  00002016
       000000000000000f  0000000000000000   A       0     0     1
  [ 4] .dynsym           DYNSYM           0000000000002028  00002028
       0000000000000018  0000000000000018   A       5     1     8
  [ 5] .dynstr           STRTAB           0000000000002040  00002040
       0000000000000001  0000000000000000   A       0     0     1
  [ 6] .hash             HASH             0000000000002048  00002048
       0000000000000010  0000000000000004   A       4     0     8
  [ 7] .rela.dyn         RELA             0000000000002058  00002058
       0000000000000018  0000000000000018   A       4     0     8
  [ 8] .data             PROGBITS         0000000000003000  00003000
       0000000000000008  0000000000000000  WA       0     0     8
  [ 9] .dynamic          DYNAMIC          0000000000003008  00003008
       0000000000000100  0000000000000010  WA       5     0     8
  [10] .got              PROGBITS         0000000000003108  00003108
       0000000000000008  0000000000000008  WA       0     0     8
  [11] .got.plt          PROGBITS         0000000000003110  00003110
       0000000000000018  0000000000000008  WA       0     0     8
  [12] .bss              NOBITS           0000000000003130  00003128
       0000000000000158  0000000000000000  WA       0     0     16
  [13] .comment          PROGBITS         0000000000000000  00003128
       0000000000000012  0000000000000001  MS       0     0     1
  [14] .symtab           SYMTAB           0000000000000000  00003140
       0000000000000750  0000000000000018          15    23     8
  [15] .strtab           STRTAB           0000000000000000  00003890
       00000000000005ab  0000000000000000           0     0     1
  [16] .shstrtab         STRTAB           0000000000000000  00003e3b
       000000000000007c  0000000000000000           0     0     1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  D (mbind), l (large), p (processor specific)

There are no section groups in this file.

Program Headers:
  Type           Offset             VirtAddr           PhysAddr
                 FileSiz            MemSiz              Flags  Align
  PHDR           0x0000000000000040 0x0000000000000040 0x0000000000000040
                 0x0000000000000118 0x0000000000000118  R      0x8
  INTERP         0x0000000000002016 0x0000000000002016 0x0000000000002016
                 0x000000000000000f 0x000000000000000f  R      0x1
      [Requesting program interpreter: /lib/ld64.so.1]
  LOAD           0x0000000000000000 0x0000000000000000 0x0000000000000000
                 0x0000000000002070 0x0000000000002070  R E    0x1000
  LOAD           0x0000000000003000 0x0000000000003000 0x0000000000003000
                 0x0000000000000128 0x0000000000000288  RW     0x1000
  DYNAMIC        0x0000000000003008 0x0000000000003008 0x0000000000003008
                 0x0000000000000100 0x0000000000000100  RW     0x8

 Section to Segment mapping:
  Segment Sections...
   00     
   01     .interp 
   02     .text .rodata .interp .dynsym .dynstr .hash .rela.dyn 
   03     .data .dynamic .got .got.plt .bss 
   04     .dynamic 

Dynamic section at offset 0x3008 contains 12 entries:
  Tag        Type                         Name/Value
 0x0000000000000004 (HASH)               0x2048
 0x0000000000000005 (STRTAB)             0x2040
 0x0000000000000006 (SYMTAB)             0x2028
 0x000000000000000a (STRSZ)              1 (bytes)
 0x000000000000000b (SYMENT)             24 (bytes)
 0x0000000000000015 (DEBUG)              0x0
 0x0000000000000007 (RELA)               0x2058
 0x0000000000000008 (RELASZ)             24 (bytes)
 0x0000000000000009 (RELAENT)            24 (bytes)
 0x000000006ffffffb (FLAGS_1)            Flags: PIE
 0x000000006ffffff9 (RELACOUNT)          1
 0x0000000000000000 (NULL)               0x0

Relocation section '.rela.dyn' at offset 0x2058 contains 1 entry:
  Offset          Info           Type           Sym. Value    Sym. Name + Addend
000000003108  000000000008 R_X86_64_RELATIVE                    3000
No processor specific unwind information to decode

Symbol table '.dynsym' contains 1 entry:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND 

Symbol table '.symtab' contains 78 entries:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND 
     1: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS mouse.cpp
     2: 0000000000002000     2 OBJECT  LOCAL  DEFAULT    2 _ZN2IOL4COM1E
     3: 0000000000002002     2 OBJECT  LOCAL  DEFAULT    2 _ZN2IOL4COM2E
     4: 0000000000002004     2 OBJECT  LOCAL  DEFAULT    2 _ZN2IOL4COM3E
     5: 0000000000002006     2 OBJECT  LOCAL  DEFAULT    2 _ZN2IOL4COM4E
     6: 0000000000002008     2 OBJECT  LOCAL  DEFAULT    2 _ZN2IOL4COM5E
     7: 000000000000200a     2 OBJECT  LOCAL  DEFAULT    2 _ZN2IOL4COM6E
     8: 000000000000200c     2 OBJECT  LOCAL  DEFAULT    2 _ZN2IOL4COM7E
     9: 000000000000200e     2 OBJECT  LOCAL  DEFAULT    2 _ZN2IOL4COM8E
    10: 0000000000003180    16 OBJECT  LOCAL  DEFAULT   12 _ZL6msdata
    11: 0000000000003190     1 OBJECT  LOCAL  DEFAULT   12 _ZL10MouseCycle
    12: 0000000000003191     4 OBJECT  LOCAL  DEFAULT   12 _ZL11MousePacket
    13: 0000000000003195     1 OBJECT  LOCAL  DEFAULT   12 _ZL16MousePacketReady
    14: 0000000000001451    57 FUNC    LOCAL  DEFAULT    1 _ZL10MouseWriteh
    15: 0000000000001703   139 FUNC    LOCAL  DEFAULT    1 _ZL10mouse_initv
    16: 000000000000178e   202 FUNC    LOCAL  DEFAULT    1 _ZL11irq_handler[...]
    17: 0000000000001858    37 FUNC    LOCAL  DEFAULT    1 _ZL11driver_mainPv
    18: 000000000000187d    62 FUNC    LOCAL  DEFAULT    1 _ZL11driver_readPvm
    19: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS tinyubsan.cpp
    20: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS 
    21: 0000000000003008     0 OBJECT  LOCAL  DEFAULT    9 _DYNAMIC
    22: 0000000000003110     0 OBJECT  LOCAL  DEFAULT   11 _GLOBAL_OFFSET_TABLE_
    23: 0000000000003140     8 OBJECT  GLOBAL DEFAULT   12 _ZN6kvideo11clea[...]
    24: 0000000000003248     8 OBJECT  WEAK   DEFAULT   12 _ZN6kvideo10back[...]
    25: 00000000000031a0     8 OBJECT  WEAK   DEFAULT   12 _ZN6usrknl3hcfE
    26: 00000000000031b0     8 OBJECT  WEAK   DEFAULT   12 _ZN6usrknl11read[...]
    27: 0000000000003268     8 OBJECT  WEAK   DEFAULT   12 _ZSt7realloc
    28: 00000000000031f0     8 OBJECT  WEAK   DEFAULT   12 _ZN6usrknl11emit[...]
    29: 0000000000003000     8 OBJECT  GLOBAL DEFAULT    8 __stack_chk_guard
    30: 0000000000003148     8 OBJECT  GLOBAL DEFAULT   12 _ZN6kvideo9fillColorE
    31: 0000000000003168     8 OBJECT  GLOBAL DEFAULT   12 _ZN6kvideo12rend[...]
    32: 0000000000003278     8 OBJECT  WEAK   DEFAULT   12 _ZSt5clock
    33: 0000000000003210     8 OBJECT  WEAK   DEFAULT   12 _ZN7kthread5yieldE
    34: 0000000000003228     8 OBJECT  WEAK   DEFAULT   12 _ZN7kthread10thi[...]
    35: 0000000000003170     8 OBJECT  GLOBAL DEFAULT   12 _ZN6kvideo12curs[...]
    36: 0000000000003230     8 OBJECT  WEAK   DEFAULT   12 _ZN6kvideo3CSRE
    37: 00000000000013ce    30 FUNC    WEAK   DEFAULT    1 _ZN2IO3inbEt
    38: 00000000000031e8     8 OBJECT  WEAK   DEFAULT   12 _ZN6usrknl13list[...]
    39: 00000000000018f6    80 FUNC    WEAK   DEFAULT    1 _Z7kmemsetIcEPvS0_T_m
    40: 00000000000031b8     8 OBJECT  WEAK   DEFAULT   12 _ZN6usrknl12writ[...]
    41: 0000000000003208     8 OBJECT  WEAK   DEFAULT   12 _ZN6usrknl13forg[...]
    42: 00000000000031f8     8 OBJECT  WEAK   DEFAULT   12 _ZN6usrknl11emit[...]
    43: 0000000000003280     8 OBJECT  WEAK   DEFAULT   12 _ZSt5fopen
    44: 0000000000001a00     7 FUNC    GLOBAL DEFAULT    1 __stack_chk_fail
    45: 000000000000323c     4 OBJECT  WEAK   DEFAULT   12 _ZN6kvideo1HE
    46: 00000000000013ec    31 FUNC    WEAK   DEFAULT    1 _ZN2IO4outbEth
    47: 0000000000003270     8 OBJECT  WEAK   DEFAULT   12 _ZSt4free
    48: 0000000000003130     8 OBJECT  GLOBAL DEFAULT   12 _ZN3CPU10installISRE
    49: 0000000000001141   653 FUNC    WEAK   DEFAULT    1 _ZN4ksym7loadsym[...]
    50: 0000000000003258     8 OBJECT  WEAK   DEFAULT   12 _ZSt6printf
    51: 00000000000031a8     8 OBJECT  WEAK   DEFAULT   12 _ZN6usrknl10find[...]
    52: 0000000000003158     8 OBJECT  GLOBAL DEFAULT   12 _ZN6kvideo4rectE
    53: 000000000000140b    70 FUNC    GLOBAL DEFAULT    1 _Z9MouseWaitv
    54: 00000000000031d0     8 OBJECT  WEAK   DEFAULT   12 _ZN6usrknl11read[...]
    55: 0000000000003138     8 OBJECT  GLOBAL DEFAULT   12 _ZN3CPU10installIRQE
    56: 0000000000003240     8 OBJECT  WEAK   DEFAULT   12 _ZN6kvideo11fron[...]
    57: 0000000000003198     8 OBJECT  WEAK   DEFAULT   12 _ZN6usrknl5panicE
    58: 0000000000003200     8 OBJECT  WEAK   DEFAULT   12 _ZN6usrknl13forg[...]
    59: 0000000000003220     8 OBJECT  WEAK   DEFAULT   12 _ZN7kthread4exitE
    60: 0000000000001000   321 FUNC    GLOBAL DEFAULT    1 init
    61: 0000000000003150     8 OBJECT  GLOBAL DEFAULT   12 _ZN6kvideo10fill[...]
    62: 00000000000019d4    44 FUNC    WEAK   DEFAULT    1 _ZSt3maxIiERKT_S2_S2_
    63: 0000000000003160     8 OBJECT  GLOBAL DEFAULT   12 _ZN6kvideo4blitE
    64: 00000000000031d8     8 OBJECT  WEAK   DEFAULT   12 _ZN6usrknl12writ[...]
    65: 0000000000003250     8 OBJECT  WEAK   DEFAULT   12 _ZSt6assert
    66: 0000000000003178     8 OBJECT  GLOBAL DEFAULT   12 _ZN6kvideo11swap[...]
    67: 00000000000031e0     8 OBJECT  WEAK   DEFAULT   12 _ZN6usrknl13list[...]
    68: 000000000000148a    21 FUNC    GLOBAL DEFAULT    1 _Z9MouseReadv
    69: 0000000000001946    98 FUNC    WEAK   DEFAULT    1 _Z7kmemcpyIcEPvS[...]
    70: 0000000000003260     8 OBJECT  WEAK   DEFAULT   12 _ZSt6malloc
    71: 00000000000019a8    44 FUNC    WEAK   DEFAULT    1 _ZSt3minIiERKT_S2_S2_
    72: 00000000000031c8     8 OBJECT  WEAK   DEFAULT   12 _ZN6usrknl12writ[...]
    73: 000000000000149f   612 FUNC    GLOBAL DEFAULT    1 _Z18ProcessMouse[...]
    74: 00000000000031c0     8 OBJECT  WEAK   DEFAULT   12 _ZN6usrknl11read[...]
    75: 00000000000018bb    59 FUNC    WEAK   DEFAULT    1 _ZSt5clampIiERKT[...]
    76: 0000000000003218     8 OBJECT  WEAK   DEFAULT   12 _ZN7kthread5sleepE
    77: 0000000000003238     4 OBJECT  WEAK   DEFAULT   12 _ZN6kvideo1WE

Histogram for bucket list length (total of 1 bucket):
 Length  Number     % of total  Coverage
      0  1          (100.0%)

No version information found in this file.






-------- objdump -s mouse.elf --------

../sysroot/drv/mouse.elf:     file format elf64-x86-64


Disassembly of section .text:

0000000000001000 <init>:
    1000:	55                   	push   %rbp
    1001:	48 89 e5             	mov    %rsp,%rbp
    1004:	48 83 ec 20          	sub    $0x20,%rsp
    1008:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    100c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1010:	48 89 c7             	mov    %rax,%rdi
    1013:	e8 29 01 00 00       	call   1141 <_ZN4ksym7loadsymEPNS_6ksym_tE>
    1018:	48 8b 05 41 22 00 00 	mov    0x2241(%rip),%rax        # 3260 <_ZSt6malloc>
    101f:	bf 68 00 00 00       	mov    $0x68,%edi
    1024:	ff d0                	call   *%rax
    1026:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    102a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    102e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    1035:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1039:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    1040:	00 
    1041:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1045:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    104c:	00 
    104d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1051:	48 c7 40 18 01 00 00 	movq   $0x1,0x18(%rax)
    1058:	00 
    1059:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    105d:	48 c7 40 20 05 00 00 	movq   $0x5,0x20(%rax)
    1064:	00 
    1065:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1069:	c6 40 28 00          	movb   $0x0,0x28(%rax)
    106d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1071:	c6 40 29 00          	movb   $0x0,0x29(%rax)
    1075:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1079:	c6 40 2a 00          	movb   $0x0,0x2a(%rax)
    107d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1081:	c6 40 2b 00          	movb   $0x0,0x2b(%rax)
    1085:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1089:	c6 40 2c 00          	movb   $0x0,0x2c(%rax)
    108d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1091:	c6 40 2d 00          	movb   $0x0,0x2d(%rax)
    1095:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1099:	c6 40 2e 00          	movb   $0x0,0x2e(%rax)
    109d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10a1:	c6 40 2f 00          	movb   $0x0,0x2f(%rax)
    10a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10a9:	48 8d 15 a8 07 00 00 	lea    0x7a8(%rip),%rdx        # 1858 <_ZL11driver_mainPv>
    10b0:	48 89 50 30          	mov    %rdx,0x30(%rax)
    10b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10b8:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
    10bf:	00 
    10c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10c4:	48 c7 40 40 00 00 00 	movq   $0x0,0x40(%rax)
    10cb:	00 
    10cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10d0:	48 8d 15 a6 07 00 00 	lea    0x7a6(%rip),%rdx        # 187d <_ZL11driver_readPvm>
    10d7:	48 89 50 48          	mov    %rdx,0x48(%rax)
    10db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10df:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    10e6:	00 
    10e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10eb:	48 c7 40 58 0c 00 00 	movq   $0xc,0x58(%rax)
    10f2:	00 
    10f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10f7:	48 8d 15 90 06 00 00 	lea    0x690(%rip),%rdx        # 178e <_ZL11irq_handlerP10intframe_t>
    10fe:	48 89 50 60          	mov    %rdx,0x60(%rax)
    1102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1106:	48 83 c0 28          	add    $0x28,%rax
    110a:	ba 08 00 00 00       	mov    $0x8,%edx
    110f:	be 00 00 00 00       	mov    $0x0,%esi
    1114:	48 89 c7             	mov    %rax,%rdi
    1117:	e8 da 07 00 00       	call   18f6 <_Z7kmemsetIcEPvS0_T_m>
    111c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1120:	48 83 c0 28          	add    $0x28,%rax
    1124:	ba 05 00 00 00       	mov    $0x5,%edx
    1129:	48 8d 0d e0 0e 00 00 	lea    0xee0(%rip),%rcx        # 2010 <_ZN2IOL4COM8E+0x2>
    1130:	48 89 ce             	mov    %rcx,%rsi
    1133:	48 89 c7             	mov    %rax,%rdi
    1136:	e8 0b 08 00 00       	call   1946 <_Z7kmemcpyIcEPvS0_PKvm>
    113b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    113f:	c9                   	leave
    1140:	c3                   	ret

0000000000001141 <_ZN4ksym7loadsymEPNS_6ksym_tE>:
    1141:	55                   	push   %rbp
    1142:	48 89 e5             	mov    %rsp,%rbp
    1145:	48 83 ec 38          	sub    $0x38,%rsp
    1149:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    114d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1151:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1155:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1159:	48 8b 00             	mov    (%rax),%rax
    115c:	48 89 05 ed 20 00 00 	mov    %rax,0x20ed(%rip)        # 3250 <_ZSt6assert>
    1163:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1167:	48 8b 40 08          	mov    0x8(%rax),%rax
    116b:	48 89 05 e6 20 00 00 	mov    %rax,0x20e6(%rip)        # 3258 <_ZSt6printf>
    1172:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1176:	48 8b 40 10          	mov    0x10(%rax),%rax
    117a:	48 89 05 df 20 00 00 	mov    %rax,0x20df(%rip)        # 3260 <_ZSt6malloc>
    1181:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1185:	48 8b 40 18          	mov    0x18(%rax),%rax
    1189:	48 89 05 d8 20 00 00 	mov    %rax,0x20d8(%rip)        # 3268 <_ZSt7realloc>
    1190:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1194:	48 8b 40 20          	mov    0x20(%rax),%rax
    1198:	48 89 05 d1 20 00 00 	mov    %rax,0x20d1(%rip)        # 3270 <_ZSt4free>
    119f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    11a3:	48 8b 40 28          	mov    0x28(%rax),%rax
    11a7:	48 89 05 ca 20 00 00 	mov    %rax,0x20ca(%rip)        # 3278 <_ZSt5clock>
    11ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    11b2:	48 8b 40 30          	mov    0x30(%rax),%rax
    11b6:	48 89 05 c3 20 00 00 	mov    %rax,0x20c3(%rip)        # 3280 <_ZSt5fopen>
    11bd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    11c1:	48 83 c0 38          	add    $0x38,%rax
    11c5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    11c9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    11cd:	48 8b 00             	mov    (%rax),%rax
    11d0:	48 89 05 59 20 00 00 	mov    %rax,0x2059(%rip)        # 3230 <_ZN6kvideo3CSRE>
    11d7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    11db:	8b 40 08             	mov    0x8(%rax),%eax
    11de:	89 05 54 20 00 00    	mov    %eax,0x2054(%rip)        # 3238 <_ZN6kvideo1WE>
    11e4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    11e8:	8b 40 0c             	mov    0xc(%rax),%eax
    11eb:	89 05 4b 20 00 00    	mov    %eax,0x204b(%rip)        # 323c <_ZN6kvideo1HE>
    11f1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    11f5:	48 8b 40 10          	mov    0x10(%rax),%rax
    11f9:	48 89 05 40 20 00 00 	mov    %rax,0x2040(%rip)        # 3240 <_ZN6kvideo11frontbufferE>
    1200:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1204:	48 8b 40 18          	mov    0x18(%rax),%rax
    1208:	48 89 05 39 20 00 00 	mov    %rax,0x2039(%rip)        # 3248 <_ZN6kvideo10backbufferE>
    120f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1213:	48 8b 40 20          	mov    0x20(%rax),%rax
    1217:	48 89 05 22 1f 00 00 	mov    %rax,0x1f22(%rip)        # 3140 <_ZN6kvideo11clearBufferE>
    121e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1222:	48 8b 40 28          	mov    0x28(%rax),%rax
    1226:	48 89 05 1b 1f 00 00 	mov    %rax,0x1f1b(%rip)        # 3148 <_ZN6kvideo9fillColorE>
    122d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1231:	48 8b 40 30          	mov    0x30(%rax),%rax
    1235:	48 89 05 14 1f 00 00 	mov    %rax,0x1f14(%rip)        # 3150 <_ZN6kvideo10fillBufferE>
    123c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1240:	48 8b 40 38          	mov    0x38(%rax),%rax
    1244:	48 89 05 0d 1f 00 00 	mov    %rax,0x1f0d(%rip)        # 3158 <_ZN6kvideo4rectE>
    124b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    124f:	48 8b 40 40          	mov    0x40(%rax),%rax
    1253:	48 89 05 06 1f 00 00 	mov    %rax,0x1f06(%rip)        # 3160 <_ZN6kvideo4blitE>
    125a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    125e:	48 8b 40 48          	mov    0x48(%rax),%rax
    1262:	48 89 05 ff 1e 00 00 	mov    %rax,0x1eff(%rip)        # 3168 <_ZN6kvideo12renderStringE>
    1269:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    126d:	48 8b 40 50          	mov    0x50(%rax),%rax
    1271:	48 89 05 f8 1e 00 00 	mov    %rax,0x1ef8(%rip)        # 3170 <_ZN6kvideo12cursorStringE>
    1278:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    127c:	48 8b 40 58          	mov    0x58(%rax),%rax
    1280:	48 89 05 f1 1e 00 00 	mov    %rax,0x1ef1(%rip)        # 3178 <_ZN6kvideo11swapBuffersE>
    1287:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    128b:	48 05 98 00 00 00    	add    $0x98,%rax
    1291:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1295:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1299:	48 8b 00             	mov    (%rax),%rax
    129c:	48 89 05 6d 1f 00 00 	mov    %rax,0x1f6d(%rip)        # 3210 <_ZN7kthread5yieldE>
    12a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    12a7:	48 8b 40 08          	mov    0x8(%rax),%rax
    12ab:	48 89 05 66 1f 00 00 	mov    %rax,0x1f66(%rip)        # 3218 <_ZN7kthread5sleepE>
    12b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    12b6:	48 8b 40 10          	mov    0x10(%rax),%rax
    12ba:	48 89 05 5f 1f 00 00 	mov    %rax,0x1f5f(%rip)        # 3220 <_ZN7kthread4exitE>
    12c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    12c5:	48 8b 40 18          	mov    0x18(%rax),%rax
    12c9:	48 89 05 58 1f 00 00 	mov    %rax,0x1f58(%rip)        # 3228 <_ZN7kthread10this_cpuidE>
    12d0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    12d4:	48 05 b8 00 00 00    	add    $0xb8,%rax
    12da:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    12de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    12e2:	48 8b 00             	mov    (%rax),%rax
    12e5:	48 89 05 c4 1e 00 00 	mov    %rax,0x1ec4(%rip)        # 31b0 <_ZN6usrknl11readMsStateE>
    12ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    12f0:	48 8b 40 08          	mov    0x8(%rax),%rax
    12f4:	48 89 05 bd 1e 00 00 	mov    %rax,0x1ebd(%rip)        # 31b8 <_ZN6usrknl12writeMsStateE>
    12fb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    12ff:	48 8b 40 10          	mov    0x10(%rax),%rax
    1303:	48 89 05 b6 1e 00 00 	mov    %rax,0x1eb6(%rip)        # 31c0 <_ZN6usrknl11readMsEventE>
    130a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    130e:	48 8b 40 18          	mov    0x18(%rax),%rax
    1312:	48 89 05 af 1e 00 00 	mov    %rax,0x1eaf(%rip)        # 31c8 <_ZN6usrknl12writeMsEventE>
    1319:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    131d:	48 8b 40 20          	mov    0x20(%rax),%rax
    1321:	48 89 05 a8 1e 00 00 	mov    %rax,0x1ea8(%rip)        # 31d0 <_ZN6usrknl11readKbEventE>
    1328:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    132c:	48 8b 40 28          	mov    0x28(%rax),%rax
    1330:	48 89 05 a1 1e 00 00 	mov    %rax,0x1ea1(%rip)        # 31d8 <_ZN6usrknl12writeKbEventE>
    1337:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    133b:	48 8b 40 30          	mov    0x30(%rax),%rax
    133f:	48 89 05 9a 1e 00 00 	mov    %rax,0x1e9a(%rip)        # 31e0 <_ZN6usrknl13listenMsEventE>
    1346:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    134a:	48 8b 40 38          	mov    0x38(%rax),%rax
    134e:	48 89 05 93 1e 00 00 	mov    %rax,0x1e93(%rip)        # 31e8 <_ZN6usrknl13listenKbEventE>
    1355:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1359:	48 8b 40 40          	mov    0x40(%rax),%rax
    135d:	48 89 05 8c 1e 00 00 	mov    %rax,0x1e8c(%rip)        # 31f0 <_ZN6usrknl11emitMsEventE>
    1364:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1368:	48 8b 40 48          	mov    0x48(%rax),%rax
    136c:	48 89 05 85 1e 00 00 	mov    %rax,0x1e85(%rip)        # 31f8 <_ZN6usrknl11emitKbEventE>
    1373:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1377:	48 8b 40 50          	mov    0x50(%rax),%rax
    137b:	48 89 05 7e 1e 00 00 	mov    %rax,0x1e7e(%rip)        # 3200 <_ZN6usrknl13forgetMsEventE>
    1382:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1386:	48 8b 40 58          	mov    0x58(%rax),%rax
    138a:	48 89 05 77 1e 00 00 	mov    %rax,0x1e77(%rip)        # 3208 <_ZN6usrknl13forgetKbEventE>
    1391:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1395:	48 05 18 01 00 00    	add    $0x118,%rax
    139b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    139f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    13a3:	48 8b 00             	mov    (%rax),%rax
    13a6:	48 89 05 eb 1d 00 00 	mov    %rax,0x1deb(%rip)        # 3198 <_ZN6usrknl5panicE>
    13ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    13b1:	48 8b 40 08          	mov    0x8(%rax),%rax
    13b5:	48 89 05 e4 1d 00 00 	mov    %rax,0x1de4(%rip)        # 31a0 <_ZN6usrknl3hcfE>
    13bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    13c0:	48 8b 40 10          	mov    0x10(%rax),%rax
    13c4:	48 89 05 dd 1d 00 00 	mov    %rax,0x1ddd(%rip)        # 31a8 <_ZN6usrknl10findModuleE>
    13cb:	90                   	nop
    13cc:	c9                   	leave
    13cd:	c3                   	ret

00000000000013ce <_ZN2IO3inbEt>:
    13ce:	55                   	push   %rbp
    13cf:	48 89 e5             	mov    %rsp,%rbp
    13d2:	48 83 ec 18          	sub    $0x18,%rsp
    13d6:	89 f8                	mov    %edi,%eax
    13d8:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
    13dc:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax
    13e0:	89 c2                	mov    %eax,%edx
    13e2:	ec                   	in     (%dx),%al
    13e3:	88 45 ff             	mov    %al,-0x1(%rbp)
    13e6:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    13ea:	c9                   	leave
    13eb:	c3                   	ret

00000000000013ec <_ZN2IO4outbEth>:
    13ec:	55                   	push   %rbp
    13ed:	48 89 e5             	mov    %rsp,%rbp
    13f0:	48 83 ec 08          	sub    $0x8,%rsp
    13f4:	89 fa                	mov    %edi,%edx
    13f6:	89 f0                	mov    %esi,%eax
    13f8:	66 89 55 fc          	mov    %dx,-0x4(%rbp)
    13fc:	88 45 f8             	mov    %al,-0x8(%rbp)
    13ff:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax
    1403:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx
    1407:	ee                   	out    %al,(%dx)
    1408:	90                   	nop
    1409:	c9                   	leave
    140a:	c3                   	ret

000000000000140b <_Z9MouseWaitv>:
    140b:	55                   	push   %rbp
    140c:	48 89 e5             	mov    %rsp,%rbp
    140f:	48 83 ec 10          	sub    $0x10,%rsp
    1413:	48 c7 45 f8 a0 86 01 	movq   $0x186a0,-0x8(%rbp)
    141a:	00 
    141b:	eb 19                	jmp    1436 <_Z9MouseWaitv+0x2b>
    141d:	bf 64 00 00 00       	mov    $0x64,%edi
    1422:	e8 a7 ff ff ff       	call   13ce <_ZN2IO3inbEt>
    1427:	0f b6 c0             	movzbl %al,%eax
    142a:	83 e0 02             	and    $0x2,%eax
    142d:	85 c0                	test   %eax,%eax
    142f:	0f 94 c0             	sete   %al
    1432:	84 c0                	test   %al,%al
    1434:	75 18                	jne    144e <_Z9MouseWaitv+0x43>
    1436:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    143a:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    143e:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    1442:	48 85 c0             	test   %rax,%rax
    1445:	0f 95 c0             	setne  %al
    1448:	84 c0                	test   %al,%al
    144a:	75 d1                	jne    141d <_Z9MouseWaitv+0x12>
    144c:	eb 01                	jmp    144f <_Z9MouseWaitv+0x44>
    144e:	90                   	nop
    144f:	c9                   	leave
    1450:	c3                   	ret

0000000000001451 <_ZL10MouseWriteh>:
    1451:	55                   	push   %rbp
    1452:	48 89 e5             	mov    %rsp,%rbp
    1455:	48 83 ec 10          	sub    $0x10,%rsp
    1459:	89 f8                	mov    %edi,%eax
    145b:	88 45 fc             	mov    %al,-0x4(%rbp)
    145e:	e8 a8 ff ff ff       	call   140b <_Z9MouseWaitv>
    1463:	be d4 00 00 00       	mov    $0xd4,%esi
    1468:	bf 64 00 00 00       	mov    $0x64,%edi
    146d:	e8 7a ff ff ff       	call   13ec <_ZN2IO4outbEth>
    1472:	e8 94 ff ff ff       	call   140b <_Z9MouseWaitv>
    1477:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
    147b:	89 c6                	mov    %eax,%esi
    147d:	bf 60 00 00 00       	mov    $0x60,%edi
    1482:	e8 65 ff ff ff       	call   13ec <_ZN2IO4outbEth>
    1487:	90                   	nop
    1488:	c9                   	leave
    1489:	c3                   	ret

000000000000148a <_Z9MouseReadv>:
    148a:	55                   	push   %rbp
    148b:	48 89 e5             	mov    %rsp,%rbp
    148e:	e8 78 ff ff ff       	call   140b <_Z9MouseWaitv>
    1493:	bf 60 00 00 00       	mov    $0x60,%edi
    1498:	e8 31 ff ff ff       	call   13ce <_ZN2IO3inbEt>
    149d:	5d                   	pop    %rbp
    149e:	c3                   	ret

000000000000149f <_Z18ProcessMousePacketv>:
    149f:	55                   	push   %rbp
    14a0:	48 89 e5             	mov    %rsp,%rbp
    14a3:	48 83 ec 20          	sub    $0x20,%rsp
    14a7:	48 8b 05 5a 1c 00 00 	mov    0x1c5a(%rip),%rax        # 3108 <_DYNAMIC+0x100>
    14ae:	48 8b 08             	mov    (%rax),%rcx
    14b1:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
    14b5:	31 c9                	xor    %ecx,%ecx
    14b7:	0f b6 05 d7 1c 00 00 	movzbl 0x1cd7(%rip),%eax        # 3195 <_ZL16MousePacketReady>
    14be:	83 f0 01             	xor    $0x1,%eax
    14c1:	84 c0                	test   %al,%al
    14c3:	74 0a                	je     14cf <_Z18ProcessMousePacketv+0x30>
    14c5:	b8 00 00 00 00       	mov    $0x0,%eax
    14ca:	e9 19 02 00 00       	jmp    16e8 <_Z18ProcessMousePacketv+0x249>
    14cf:	0f b7 05 b5 1c 00 00 	movzwl 0x1cb5(%rip),%eax        # 318b <_ZL6msdata+0xb>
    14d6:	66 89 05 ab 1c 00 00 	mov    %ax,0x1cab(%rip)        # 3188 <_ZL6msdata+0x8>
    14dd:	0f b6 05 a9 1c 00 00 	movzbl 0x1ca9(%rip),%eax        # 318d <_ZL6msdata+0xd>
    14e4:	88 05 a0 1c 00 00    	mov    %al,0x1ca0(%rip)        # 318a <_ZL6msdata+0xa>
    14ea:	0f b6 05 a0 1c 00 00 	movzbl 0x1ca0(%rip),%eax        # 3191 <_ZL11MousePacket>
    14f1:	0f b6 c0             	movzbl %al,%eax
    14f4:	83 e0 01             	and    $0x1,%eax
    14f7:	85 c0                	test   %eax,%eax
    14f9:	0f 95 c0             	setne  %al
    14fc:	88 05 89 1c 00 00    	mov    %al,0x1c89(%rip)        # 318b <_ZL6msdata+0xb>
    1502:	0f b6 05 88 1c 00 00 	movzbl 0x1c88(%rip),%eax        # 3191 <_ZL11MousePacket>
    1509:	0f b6 c0             	movzbl %al,%eax
    150c:	83 e0 04             	and    $0x4,%eax
    150f:	85 c0                	test   %eax,%eax
    1511:	0f 95 c0             	setne  %al
    1514:	88 05 72 1c 00 00    	mov    %al,0x1c72(%rip)        # 318c <_ZL6msdata+0xc>
    151a:	0f b6 05 70 1c 00 00 	movzbl 0x1c70(%rip),%eax        # 3191 <_ZL11MousePacket>
    1521:	0f b6 c0             	movzbl %al,%eax
    1524:	83 e0 02             	and    $0x2,%eax
    1527:	85 c0                	test   %eax,%eax
    1529:	0f 95 c0             	setne  %al
    152c:	88 05 5b 1c 00 00    	mov    %al,0x1c5b(%rip)        # 318d <_ZL6msdata+0xd>
    1532:	0f b6 05 58 1c 00 00 	movzbl 0x1c58(%rip),%eax        # 3191 <_ZL11MousePacket>
    1539:	0f b6 c0             	movzbl %al,%eax
    153c:	83 e0 10             	and    $0x10,%eax
    153f:	85 c0                	test   %eax,%eax
    1541:	0f 95 c0             	setne  %al
    1544:	88 45 ec             	mov    %al,-0x14(%rbp)
    1547:	0f b6 05 43 1c 00 00 	movzbl 0x1c43(%rip),%eax        # 3191 <_ZL11MousePacket>
    154e:	0f b6 c0             	movzbl %al,%eax
    1551:	83 e0 20             	and    $0x20,%eax
    1554:	85 c0                	test   %eax,%eax
    1556:	0f 95 c0             	setne  %al
    1559:	88 45 ed             	mov    %al,-0x13(%rbp)
    155c:	0f b6 05 2e 1c 00 00 	movzbl 0x1c2e(%rip),%eax        # 3191 <_ZL11MousePacket>
    1563:	0f b6 c0             	movzbl %al,%eax
    1566:	83 e0 40             	and    $0x40,%eax
    1569:	85 c0                	test   %eax,%eax
    156b:	0f 95 c0             	setne  %al
    156e:	88 45 ee             	mov    %al,-0x12(%rbp)
    1571:	0f b6 05 19 1c 00 00 	movzbl 0x1c19(%rip),%eax        # 3191 <_ZL11MousePacket>
    1578:	c0 e8 07             	shr    $0x7,%al
    157b:	88 45 ef             	mov    %al,-0x11(%rbp)
    157e:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
    1582:	83 f0 01             	xor    $0x1,%eax
    1585:	84 c0                	test   %al,%al
    1587:	74 31                	je     15ba <_Z18ProcessMousePacketv+0x11b>
    1589:	8b 15 f1 1b 00 00    	mov    0x1bf1(%rip),%edx        # 3180 <_ZL6msdata>
    158f:	0f b6 05 fc 1b 00 00 	movzbl 0x1bfc(%rip),%eax        # 3192 <_ZL11MousePacket+0x1>
    1596:	0f b6 c0             	movzbl %al,%eax
    1599:	01 d0                	add    %edx,%eax
    159b:	89 05 df 1b 00 00    	mov    %eax,0x1bdf(%rip)        # 3180 <_ZL6msdata>
    15a1:	80 7d ee 00          	cmpb   $0x0,-0x12(%rbp)
    15a5:	74 51                	je     15f8 <_Z18ProcessMousePacketv+0x159>
    15a7:	8b 05 d3 1b 00 00    	mov    0x1bd3(%rip),%eax        # 3180 <_ZL6msdata>
    15ad:	05 ff 00 00 00       	add    $0xff,%eax
    15b2:	89 05 c8 1b 00 00    	mov    %eax,0x1bc8(%rip)        # 3180 <_ZL6msdata>
    15b8:	eb 3e                	jmp    15f8 <_Z18ProcessMousePacketv+0x159>
    15ba:	0f b6 05 d1 1b 00 00 	movzbl 0x1bd1(%rip),%eax        # 3192 <_ZL11MousePacket+0x1>
    15c1:	f7 d8                	neg    %eax
    15c3:	88 05 c9 1b 00 00    	mov    %al,0x1bc9(%rip)        # 3192 <_ZL11MousePacket+0x1>
    15c9:	8b 15 b1 1b 00 00    	mov    0x1bb1(%rip),%edx        # 3180 <_ZL6msdata>
    15cf:	0f b6 05 bc 1b 00 00 	movzbl 0x1bbc(%rip),%eax        # 3192 <_ZL11MousePacket+0x1>
    15d6:	0f b6 c0             	movzbl %al,%eax
    15d9:	29 c2                	sub    %eax,%edx
    15db:	89 15 9f 1b 00 00    	mov    %edx,0x1b9f(%rip)        # 3180 <_ZL6msdata>
    15e1:	80 7d ee 00          	cmpb   $0x0,-0x12(%rbp)
    15e5:	74 11                	je     15f8 <_Z18ProcessMousePacketv+0x159>
    15e7:	8b 05 93 1b 00 00    	mov    0x1b93(%rip),%eax        # 3180 <_ZL6msdata>
    15ed:	2d ff 00 00 00       	sub    $0xff,%eax
    15f2:	89 05 88 1b 00 00    	mov    %eax,0x1b88(%rip)        # 3180 <_ZL6msdata>
    15f8:	0f b6 45 ed          	movzbl -0x13(%rbp),%eax
    15fc:	83 f0 01             	xor    $0x1,%eax
    15ff:	84 c0                	test   %al,%al
    1601:	74 31                	je     1634 <_Z18ProcessMousePacketv+0x195>
    1603:	8b 15 7b 1b 00 00    	mov    0x1b7b(%rip),%edx        # 3184 <_ZL6msdata+0x4>
    1609:	0f b6 05 83 1b 00 00 	movzbl 0x1b83(%rip),%eax        # 3193 <_ZL11MousePacket+0x2>
    1610:	0f b6 c0             	movzbl %al,%eax
    1613:	29 c2                	sub    %eax,%edx
    1615:	89 15 69 1b 00 00    	mov    %edx,0x1b69(%rip)        # 3184 <_ZL6msdata+0x4>
    161b:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    161f:	74 51                	je     1672 <_Z18ProcessMousePacketv+0x1d3>
    1621:	8b 05 5d 1b 00 00    	mov    0x1b5d(%rip),%eax        # 3184 <_ZL6msdata+0x4>
    1627:	2d ff 00 00 00       	sub    $0xff,%eax
    162c:	89 05 52 1b 00 00    	mov    %eax,0x1b52(%rip)        # 3184 <_ZL6msdata+0x4>
    1632:	eb 3e                	jmp    1672 <_Z18ProcessMousePacketv+0x1d3>
    1634:	0f b6 05 58 1b 00 00 	movzbl 0x1b58(%rip),%eax        # 3193 <_ZL11MousePacket+0x2>
    163b:	f7 d8                	neg    %eax
    163d:	88 05 50 1b 00 00    	mov    %al,0x1b50(%rip)        # 3193 <_ZL11MousePacket+0x2>
    1643:	8b 15 3b 1b 00 00    	mov    0x1b3b(%rip),%edx        # 3184 <_ZL6msdata+0x4>
    1649:	0f b6 05 43 1b 00 00 	movzbl 0x1b43(%rip),%eax        # 3193 <_ZL11MousePacket+0x2>
    1650:	0f b6 c0             	movzbl %al,%eax
    1653:	01 d0                	add    %edx,%eax
    1655:	89 05 29 1b 00 00    	mov    %eax,0x1b29(%rip)        # 3184 <_ZL6msdata+0x4>
    165b:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    165f:	74 11                	je     1672 <_Z18ProcessMousePacketv+0x1d3>
    1661:	8b 05 1d 1b 00 00    	mov    0x1b1d(%rip),%eax        # 3184 <_ZL6msdata+0x4>
    1667:	05 ff 00 00 00       	add    $0xff,%eax
    166c:	89 05 12 1b 00 00    	mov    %eax,0x1b12(%rip)        # 3184 <_ZL6msdata+0x4>
    1672:	8b 05 c0 1b 00 00    	mov    0x1bc0(%rip),%eax        # 3238 <_ZN6kvideo1WE>
    1678:	83 e8 01             	sub    $0x1,%eax
    167b:	89 45 f4             	mov    %eax,-0xc(%rbp)
    167e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    1685:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
    1689:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    168d:	48 89 c6             	mov    %rax,%rsi
    1690:	48 8d 05 e9 1a 00 00 	lea    0x1ae9(%rip),%rax        # 3180 <_ZL6msdata>
    1697:	48 89 c7             	mov    %rax,%rdi
    169a:	e8 1c 02 00 00       	call   18bb <_ZSt5clampIiERKT_S2_S2_S2_>
    169f:	8b 00                	mov    (%rax),%eax
    16a1:	89 05 d9 1a 00 00    	mov    %eax,0x1ad9(%rip)        # 3180 <_ZL6msdata>
    16a7:	8b 05 8f 1b 00 00    	mov    0x1b8f(%rip),%eax        # 323c <_ZN6kvideo1HE>
    16ad:	83 e8 01             	sub    $0x1,%eax
    16b0:	89 45 f4             	mov    %eax,-0xc(%rbp)
    16b3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    16ba:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
    16be:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    16c2:	48 89 c6             	mov    %rax,%rsi
    16c5:	48 8d 05 b8 1a 00 00 	lea    0x1ab8(%rip),%rax        # 3184 <_ZL6msdata+0x4>
    16cc:	48 89 c7             	mov    %rax,%rdi
    16cf:	e8 e7 01 00 00       	call   18bb <_ZSt5clampIiERKT_S2_S2_S2_>
    16d4:	8b 00                	mov    (%rax),%eax
    16d6:	89 05 a8 1a 00 00    	mov    %eax,0x1aa8(%rip)        # 3184 <_ZL6msdata+0x4>
    16dc:	c6 05 b2 1a 00 00 00 	movb   $0x0,0x1ab2(%rip)        # 3195 <_ZL16MousePacketReady>
    16e3:	b8 01 00 00 00       	mov    $0x1,%eax
    16e8:	89 c2                	mov    %eax,%edx
    16ea:	48 8b 05 17 1a 00 00 	mov    0x1a17(%rip),%rax        # 3108 <_DYNAMIC+0x100>
    16f1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    16f5:	48 2b 08             	sub    (%rax),%rcx
    16f8:	74 05                	je     16ff <_Z18ProcessMousePacketv+0x260>
    16fa:	e8 01 03 00 00       	call   1a00 <__stack_chk_fail>
    16ff:	89 d0                	mov    %edx,%eax
    1701:	c9                   	leave
    1702:	c3                   	ret

0000000000001703 <_ZL10mouse_initv>:
    1703:	55                   	push   %rbp
    1704:	48 89 e5             	mov    %rsp,%rbp
    1707:	48 83 ec 10          	sub    $0x10,%rsp
    170b:	be a8 00 00 00       	mov    $0xa8,%esi
    1710:	bf 64 00 00 00       	mov    $0x64,%edi
    1715:	e8 d2 fc ff ff       	call   13ec <_ZN2IO4outbEth>
    171a:	e8 ec fc ff ff       	call   140b <_Z9MouseWaitv>
    171f:	be 20 00 00 00       	mov    $0x20,%esi
    1724:	bf 64 00 00 00       	mov    $0x64,%edi
    1729:	e8 be fc ff ff       	call   13ec <_ZN2IO4outbEth>
    172e:	e8 d8 fc ff ff       	call   140b <_Z9MouseWaitv>
    1733:	bf 60 00 00 00       	mov    $0x60,%edi
    1738:	e8 91 fc ff ff       	call   13ce <_ZN2IO3inbEt>
    173d:	88 45 ff             	mov    %al,-0x1(%rbp)
    1740:	80 4d ff 02          	orb    $0x2,-0x1(%rbp)
    1744:	e8 c2 fc ff ff       	call   140b <_Z9MouseWaitv>
    1749:	be 60 00 00 00       	mov    $0x60,%esi
    174e:	bf 64 00 00 00       	mov    $0x64,%edi
    1753:	e8 94 fc ff ff       	call   13ec <_ZN2IO4outbEth>
    1758:	e8 ae fc ff ff       	call   140b <_Z9MouseWaitv>
    175d:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    1761:	89 c6                	mov    %eax,%esi
    1763:	bf 60 00 00 00       	mov    $0x60,%edi
    1768:	e8 7f fc ff ff       	call   13ec <_ZN2IO4outbEth>
    176d:	bf f6 00 00 00       	mov    $0xf6,%edi
    1772:	e8 da fc ff ff       	call   1451 <_ZL10MouseWriteh>
    1777:	e8 0e fd ff ff       	call   148a <_Z9MouseReadv>
    177c:	bf f4 00 00 00       	mov    $0xf4,%edi
    1781:	e8 cb fc ff ff       	call   1451 <_ZL10MouseWriteh>
    1786:	e8 ff fc ff ff       	call   148a <_Z9MouseReadv>
    178b:	90                   	nop
    178c:	c9                   	leave
    178d:	c3                   	ret

000000000000178e <_ZL11irq_handlerP10intframe_t>:
    178e:	55                   	push   %rbp
    178f:	48 89 e5             	mov    %rsp,%rbp
    1792:	48 83 ec 20          	sub    $0x20,%rsp
    1796:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    179a:	bf 60 00 00 00       	mov    $0x60,%edi
    179f:	e8 2a fc ff ff       	call   13ce <_ZN2IO3inbEt>
    17a4:	88 45 ff             	mov    %al,-0x1(%rbp)
    17a7:	0f b6 05 e2 19 00 00 	movzbl 0x19e2(%rip),%eax        # 3190 <_ZL10MouseCycle>
    17ae:	0f b6 c0             	movzbl %al,%eax
    17b1:	83 f8 02             	cmp    $0x2,%eax
    17b4:	74 70                	je     1826 <_ZL11irq_handlerP10intframe_t+0x98>
    17b6:	83 f8 02             	cmp    $0x2,%eax
    17b9:	0f 8f 96 00 00 00    	jg     1855 <_ZL11irq_handlerP10intframe_t+0xc7>
    17bf:	85 c0                	test   %eax,%eax
    17c1:	74 0a                	je     17cd <_ZL11irq_handlerP10intframe_t+0x3f>
    17c3:	83 f8 01             	cmp    $0x1,%eax
    17c6:	74 37                	je     17ff <_ZL11irq_handlerP10intframe_t+0x71>
    17c8:	e9 88 00 00 00       	jmp    1855 <_ZL11irq_handlerP10intframe_t+0xc7>
    17cd:	0f b6 05 c1 19 00 00 	movzbl 0x19c1(%rip),%eax        # 3195 <_ZL16MousePacketReady>
    17d4:	84 c0                	test   %al,%al
    17d6:	75 73                	jne    184b <_ZL11irq_handlerP10intframe_t+0xbd>
    17d8:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    17dc:	83 e0 08             	and    $0x8,%eax
    17df:	85 c0                	test   %eax,%eax
    17e1:	74 6b                	je     184e <_ZL11irq_handlerP10intframe_t+0xc0>
    17e3:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    17e7:	88 05 a4 19 00 00    	mov    %al,0x19a4(%rip)        # 3191 <_ZL11MousePacket>
    17ed:	0f b6 05 9c 19 00 00 	movzbl 0x199c(%rip),%eax        # 3190 <_ZL10MouseCycle>
    17f4:	83 c0 01             	add    $0x1,%eax
    17f7:	88 05 93 19 00 00    	mov    %al,0x1993(%rip)        # 3190 <_ZL10MouseCycle>
    17fd:	eb 56                	jmp    1855 <_ZL11irq_handlerP10intframe_t+0xc7>
    17ff:	0f b6 05 8f 19 00 00 	movzbl 0x198f(%rip),%eax        # 3195 <_ZL16MousePacketReady>
    1806:	84 c0                	test   %al,%al
    1808:	75 47                	jne    1851 <_ZL11irq_handlerP10intframe_t+0xc3>
    180a:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    180e:	88 05 7e 19 00 00    	mov    %al,0x197e(%rip)        # 3192 <_ZL11MousePacket+0x1>
    1814:	0f b6 05 75 19 00 00 	movzbl 0x1975(%rip),%eax        # 3190 <_ZL10MouseCycle>
    181b:	83 c0 01             	add    $0x1,%eax
    181e:	88 05 6c 19 00 00    	mov    %al,0x196c(%rip)        # 3190 <_ZL10MouseCycle>
    1824:	eb 2f                	jmp    1855 <_ZL11irq_handlerP10intframe_t+0xc7>
    1826:	0f b6 05 68 19 00 00 	movzbl 0x1968(%rip),%eax        # 3195 <_ZL16MousePacketReady>
    182d:	84 c0                	test   %al,%al
    182f:	75 23                	jne    1854 <_ZL11irq_handlerP10intframe_t+0xc6>
    1831:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    1835:	88 05 58 19 00 00    	mov    %al,0x1958(%rip)        # 3193 <_ZL11MousePacket+0x2>
    183b:	c6 05 53 19 00 00 01 	movb   $0x1,0x1953(%rip)        # 3195 <_ZL16MousePacketReady>
    1842:	c6 05 47 19 00 00 00 	movb   $0x0,0x1947(%rip)        # 3190 <_ZL10MouseCycle>
    1849:	eb 0a                	jmp    1855 <_ZL11irq_handlerP10intframe_t+0xc7>
    184b:	90                   	nop
    184c:	eb 07                	jmp    1855 <_ZL11irq_handlerP10intframe_t+0xc7>
    184e:	90                   	nop
    184f:	eb 04                	jmp    1855 <_ZL11irq_handlerP10intframe_t+0xc7>
    1851:	90                   	nop
    1852:	eb 01                	jmp    1855 <_ZL11irq_handlerP10intframe_t+0xc7>
    1854:	90                   	nop
    1855:	90                   	nop
    1856:	c9                   	leave
    1857:	c3                   	ret

0000000000001858 <_ZL11driver_mainPv>:
    1858:	55                   	push   %rbp
    1859:	48 89 e5             	mov    %rsp,%rbp
    185c:	48 83 ec 10          	sub    $0x10,%rsp
    1860:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1864:	e8 9a fe ff ff       	call   1703 <_ZL10mouse_initv>
    1869:	e8 31 fc ff ff       	call   149f <_Z18ProcessMousePacketv>
    186e:	84 c0                	test   %al,%al
    1870:	74 f7                	je     1869 <_ZL11driver_mainPv+0x11>
    1872:	48 8b 05 97 19 00 00 	mov    0x1997(%rip),%rax        # 3210 <_ZN7kthread5yieldE>
    1879:	ff d0                	call   *%rax
    187b:	eb ec                	jmp    1869 <_ZL11driver_mainPv+0x11>

000000000000187d <_ZL11driver_readPvm>:
    187d:	55                   	push   %rbp
    187e:	48 89 e5             	mov    %rsp,%rbp
    1881:	48 83 ec 10          	sub    $0x10,%rsp
    1885:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1889:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    188d:	48 83 7d f0 0f       	cmpq   $0xf,-0x10(%rbp)
    1892:	77 07                	ja     189b <_ZL11driver_readPvm+0x1e>
    1894:	b8 00 00 00 00       	mov    $0x0,%eax
    1899:	eb 1e                	jmp    18b9 <_ZL11driver_readPvm+0x3c>
    189b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    189f:	48 8b 15 da 18 00 00 	mov    0x18da(%rip),%rdx        # 3180 <_ZL6msdata>
    18a6:	48 89 10             	mov    %rdx,(%rax)
    18a9:	48 8b 15 d6 18 00 00 	mov    0x18d6(%rip),%rdx        # 3186 <_ZL6msdata+0x6>
    18b0:	48 89 50 06          	mov    %rdx,0x6(%rax)
    18b4:	b8 10 00 00 00       	mov    $0x10,%eax
    18b9:	c9                   	leave
    18ba:	c3                   	ret

00000000000018bb <_ZSt5clampIiERKT_S2_S2_S2_>:
    18bb:	55                   	push   %rbp
    18bc:	48 89 e5             	mov    %rsp,%rbp
    18bf:	48 83 ec 20          	sub    $0x20,%rsp
    18c3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    18c7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    18cb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    18cf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    18d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    18d7:	48 89 d6             	mov    %rdx,%rsi
    18da:	48 89 c7             	mov    %rax,%rdi
    18dd:	e8 c6 00 00 00       	call   19a8 <_ZSt3minIiERKT_S2_S2_>
    18e2:	48 89 c2             	mov    %rax,%rdx
    18e5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    18e9:	48 89 d6             	mov    %rdx,%rsi
    18ec:	48 89 c7             	mov    %rax,%rdi
    18ef:	e8 e0 00 00 00       	call   19d4 <_ZSt3maxIiERKT_S2_S2_>
    18f4:	c9                   	leave
    18f5:	c3                   	ret

00000000000018f6 <_Z7kmemsetIcEPvS0_T_m>:
    18f6:	55                   	push   %rbp
    18f7:	48 89 e5             	mov    %rsp,%rbp
    18fa:	48 83 ec 28          	sub    $0x28,%rsp
    18fe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1902:	89 f0                	mov    %esi,%eax
    1904:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    1908:	88 45 e4             	mov    %al,-0x1c(%rbp)
    190b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    190f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1913:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1917:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    191b:	48 01 d0             	add    %rdx,%rax
    191e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1922:	eb 12                	jmp    1936 <_Z7kmemsetIcEPvS0_T_m+0x40>
    1924:	0f b6 55 e4          	movzbl -0x1c(%rbp),%edx
    1928:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    192c:	48 8d 48 01          	lea    0x1(%rax),%rcx
    1930:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
    1934:	88 10                	mov    %dl,(%rax)
    1936:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    193a:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    193e:	72 e4                	jb     1924 <_Z7kmemsetIcEPvS0_T_m+0x2e>
    1940:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1944:	c9                   	leave
    1945:	c3                   	ret

0000000000001946 <_Z7kmemcpyIcEPvS0_PKvm>:
    1946:	55                   	push   %rbp
    1947:	48 89 e5             	mov    %rsp,%rbp
    194a:	48 83 ec 38          	sub    $0x38,%rsp
    194e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1952:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    1956:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    195a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    195e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1962:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1966:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    196a:	48 01 d0             	add    %rdx,%rax
    196d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1971:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1975:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1979:	eb 1d                	jmp    1998 <_Z7kmemcpyIcEPvS0_PKvm+0x52>
    197b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    197f:	48 8d 50 01          	lea    0x1(%rax),%rdx
    1983:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    1987:	0f b6 10             	movzbl (%rax),%edx
    198a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    198e:	48 8d 48 01          	lea    0x1(%rax),%rcx
    1992:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    1996:	88 10                	mov    %dl,(%rax)
    1998:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    199c:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    19a0:	72 d9                	jb     197b <_Z7kmemcpyIcEPvS0_PKvm+0x35>
    19a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    19a6:	c9                   	leave
    19a7:	c3                   	ret

00000000000019a8 <_ZSt3minIiERKT_S2_S2_>:
    19a8:	55                   	push   %rbp
    19a9:	48 89 e5             	mov    %rsp,%rbp
    19ac:	48 83 ec 10          	sub    $0x10,%rsp
    19b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    19b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    19b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19bc:	8b 10                	mov    (%rax),%edx
    19be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19c2:	8b 00                	mov    (%rax),%eax
    19c4:	39 c2                	cmp    %eax,%edx
    19c6:	7d 06                	jge    19ce <_ZSt3minIiERKT_S2_S2_+0x26>
    19c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19cc:	eb 04                	jmp    19d2 <_ZSt3minIiERKT_S2_S2_+0x2a>
    19ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19d2:	c9                   	leave
    19d3:	c3                   	ret

00000000000019d4 <_ZSt3maxIiERKT_S2_S2_>:
    19d4:	55                   	push   %rbp
    19d5:	48 89 e5             	mov    %rsp,%rbp
    19d8:	48 83 ec 10          	sub    $0x10,%rsp
    19dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    19e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    19e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19e8:	8b 10                	mov    (%rax),%edx
    19ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19ee:	8b 00                	mov    (%rax),%eax
    19f0:	39 c2                	cmp    %eax,%edx
    19f2:	7e 06                	jle    19fa <_ZSt3maxIiERKT_S2_S2_+0x26>
    19f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19f8:	eb 04                	jmp    19fe <_ZSt3maxIiERKT_S2_S2_+0x2a>
    19fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19fe:	c9                   	leave
    19ff:	c3                   	ret

0000000000001a00 <__stack_chk_fail>:
    1a00:	55                   	push   %rbp
    1a01:	48 89 e5             	mov    %rsp,%rbp
    1a04:	90                   	nop
    1a05:	eb fd                	jmp    1a04 <__stack_chk_fail+0x4>






