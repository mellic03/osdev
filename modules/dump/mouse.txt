-------- readelf -a mouse.elf --------
ELF Header:
  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF64
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              DYN (Position-Independent Executable file)
  Machine:                           Advanced Micro Devices X86-64
  Version:                           0x1
  Entry point address:               0x1000
  Start of program headers:          64 (bytes into file)
  Start of section headers:          15920 (bytes into file)
  Flags:                             0x0
  Size of this header:               64 (bytes)
  Size of program headers:           56 (bytes)
  Number of program headers:         5
  Size of section headers:           64 (bytes)
  Number of section headers:         17
  Section header string table index: 16

Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
  [ 0]                   NULL             0000000000000000  00000000
       0000000000000000  0000000000000000           0     0     0
  [ 1] .text             PROGBITS         0000000000001000  00001000
       0000000000000a46  0000000000000000  AX       0     0     2
  [ 2] .rodata           PROGBITS         0000000000002000  00002000
       0000000000000016  0000000000000000   A       0     0     2
  [ 3] .eh_frame         PROGBITS         0000000000002018  00002018
       0000000000000334  0000000000000000   A       0     0     8
  [ 4] .interp           PROGBITS         000000000000234c  0000234c
       000000000000000f  0000000000000000   A       0     0     1
  [ 5] .dynsym           DYNSYM           0000000000002360  00002360
       0000000000000018  0000000000000018   A       6     1     8
  [ 6] .dynstr           STRTAB           0000000000002378  00002378
       0000000000000001  0000000000000000   A       0     0     1
  [ 7] .hash             HASH             0000000000002380  00002380
       0000000000000010  0000000000000004   A       5     0     8
  [ 8] .rela.dyn         RELA             0000000000002390  00002390
       00000000000000a8  0000000000000018   A       5     0     8
  [ 9] .data             PROGBITS         0000000000003000  00003000
       0000000000000030  0000000000000000  WA       0     0     8
  [10] .ctors            PROGBITS         0000000000003030  00003030
       0000000000000008  0000000000000000  WA       0     0     8
  [11] .dynamic          DYNAMIC          0000000000003038  00003038
       0000000000000100  0000000000000010  WA       6     0     8
  [12] .bss              NOBITS           0000000000003140  00003138
       0000000000000108  0000000000000000  WA       0     0     32
  [13] .comment          PROGBITS         0000000000000000  00003138
       0000000000000012  0000000000000001  MS       0     0     1
  [14] .symtab           SYMTAB           0000000000000000  00003150
       0000000000000738  0000000000000018          15    25     8
  [15] .strtab           STRTAB           0000000000000000  00003888
       0000000000000523  0000000000000000           0     0     1
  [16] .shstrtab         STRTAB           0000000000000000  00003dab
       000000000000007f  0000000000000000           0     0     1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  D (mbind), l (large), p (processor specific)

There are no section groups in this file.

Program Headers:
  Type           Offset             VirtAddr           PhysAddr
                 FileSiz            MemSiz              Flags  Align
  PHDR           0x0000000000000040 0x0000000000000040 0x0000000000000040
                 0x0000000000000118 0x0000000000000118  R      0x8
  INTERP         0x000000000000234c 0x000000000000234c 0x000000000000234c
                 0x000000000000000f 0x000000000000000f  R      0x1
      [Requesting program interpreter: /lib/ld64.so.1]
  LOAD           0x0000000000000000 0x0000000000000000 0x0000000000000000
                 0x0000000000002438 0x0000000000002438  R E    0x1000
  LOAD           0x0000000000003000 0x0000000000003000 0x0000000000003000
                 0x0000000000000138 0x0000000000000248  RW     0x1000
  DYNAMIC        0x0000000000003038 0x0000000000003038 0x0000000000003038
                 0x0000000000000100 0x0000000000000100  RW     0x8

 Section to Segment mapping:
  Segment Sections...
   00     
   01     .interp 
   02     .text .rodata .eh_frame .interp .dynsym .dynstr .hash .rela.dyn 
   03     .data .ctors .dynamic .bss 
   04     .dynamic 

Dynamic section at offset 0x3038 contains 12 entries:
  Tag        Type                         Name/Value
 0x0000000000000004 (HASH)               0x2380
 0x0000000000000005 (STRTAB)             0x2378
 0x0000000000000006 (SYMTAB)             0x2360
 0x000000000000000a (STRSZ)              1 (bytes)
 0x000000000000000b (SYMENT)             24 (bytes)
 0x0000000000000015 (DEBUG)              0x0
 0x0000000000000007 (RELA)               0x2390
 0x0000000000000008 (RELASZ)             168 (bytes)
 0x0000000000000009 (RELAENT)            24 (bytes)
 0x000000006ffffffb (FLAGS_1)            Flags: PIE
 0x000000006ffffff9 (RELACOUNT)          7
 0x0000000000000000 (NULL)               0x0

Relocation section '.rela.dyn' at offset 0x2390 contains 7 entries:
  Offset          Info           Type           Sym. Value    Sym. Name + Addend
000000003000  000000000008 R_X86_64_RELATIVE                    134b
000000003008  000000000008 R_X86_64_RELATIVE                    1369
000000003010  000000000008 R_X86_64_RELATIVE                    1389
000000003018  000000000008 R_X86_64_RELATIVE                    13a6
000000003020  000000000008 R_X86_64_RELATIVE                    13c5
000000003028  000000000008 R_X86_64_RELATIVE                    13e6
000000003030  000000000008 R_X86_64_RELATIVE                    1a3b
No processor specific unwind information to decode

Symbol table '.dynsym' contains 1 entry:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND 

Symbol table '.symtab' contains 77 entries:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND 
     1: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS mouse.cpp
     2: 0000000000002000     2 OBJECT  LOCAL  DEFAULT    2 _ZN2IOL4COM1E
     3: 0000000000002002     2 OBJECT  LOCAL  DEFAULT    2 _ZN2IOL4COM2E
     4: 0000000000002004     2 OBJECT  LOCAL  DEFAULT    2 _ZN2IOL4COM3E
     5: 0000000000002006     2 OBJECT  LOCAL  DEFAULT    2 _ZN2IOL4COM4E
     6: 0000000000002008     2 OBJECT  LOCAL  DEFAULT    2 _ZN2IOL4COM5E
     7: 000000000000200a     2 OBJECT  LOCAL  DEFAULT    2 _ZN2IOL4COM6E
     8: 000000000000200c     2 OBJECT  LOCAL  DEFAULT    2 _ZN2IOL4COM7E
     9: 000000000000200e     2 OBJECT  LOCAL  DEFAULT    2 _ZN2IOL4COM8E
    10: 0000000000003000     8 OBJECT  LOCAL  DEFAULT    9 _ZN2IOL3in8E
    11: 0000000000003008     8 OBJECT  LOCAL  DEFAULT    9 _ZN2IOL4in16E
    12: 0000000000003010     8 OBJECT  LOCAL  DEFAULT    9 _ZN2IOL4in32E
    13: 0000000000003018     8 OBJECT  LOCAL  DEFAULT    9 _ZN2IOL4out8E
    14: 0000000000003020     8 OBJECT  LOCAL  DEFAULT    9 _ZN2IOL5out16E
    15: 0000000000003028     8 OBJECT  LOCAL  DEFAULT    9 _ZN2IOL5out32E
    16: 0000000000001448    57 FUNC    LOCAL  DEFAULT    1 _ZL10MouseWriteh
    17: 00000000000016ce   139 FUNC    LOCAL  DEFAULT    1 _ZL10mouse_initv
    18: 0000000000001759   202 FUNC    LOCAL  DEFAULT    1 _ZL11irq_handler[...]
    19: 0000000000001823    47 FUNC    LOCAL  DEFAULT    1 _ZL11driver_mainPv
    20: 0000000000001852   102 FUNC    LOCAL  DEFAULT    1 _ZL11driver_readPvm
    21: 0000000000001a25    22 FUNC    LOCAL  DEFAULT    1 _Z41__static_ini[...]
    22: 0000000000001a3b    11 FUNC    LOCAL  DEFAULT    1 _GLOBAL__sub_I__[...]
    23: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS 
    24: 0000000000003038     0 OBJECT  LOCAL  DEFAULT   11 _DYNAMIC
    25: 0000000000003150     8 OBJECT  GLOBAL DEFAULT   12 _ZN6kvideo11clea[...]
    26: 0000000000003208     8 OBJECT  WEAK   DEFAULT   12 _ZN6kvideo10back[...]
    27: 0000000000003228     8 OBJECT  WEAK   DEFAULT   12 _ZSt7realloc
    28: 0000000000003158     8 OBJECT  GLOBAL DEFAULT   12 _ZN6kvideo9fillColorE
    29: 00000000000031ad     1 OBJECT  GLOBAL DEFAULT   12 MousePacketReady
    30: 0000000000003238     8 OBJECT  WEAK   DEFAULT   12 _ZSt5clock
    31: 00000000000031e0     8 OBJECT  WEAK   DEFAULT   12 _ZN7kthread5yieldE
    32: 00000000000018b8    40 FUNC    WEAK   DEFAULT    1 _ZN3vecILm2EiEC2Eii
    33: 000000000000134b    30 FUNC    WEAK   DEFAULT    1 _ZN2IO3inbEt
    34: 000000000000191b    80 FUNC    WEAK   DEFAULT    1 _Z7kmemsetIcEPvS0_T_m
    35: 0000000000003240     8 OBJECT  WEAK   DEFAULT   12 _ZSt5fopen
    36: 0000000000003180    40 OBJECT  GLOBAL DEFAULT   12 msdata
    37: 00000000000031fc     4 OBJECT  WEAK   DEFAULT   12 _ZN6kvideo1HE
    38: 00000000000013a6    31 FUNC    WEAK   DEFAULT    1 _ZN2IO4outbEth
    39: 00000000000031b8     8 OBJECT  WEAK   DEFAULT   12 _ZN3knl3hcfE
    40: 0000000000003230     8 OBJECT  WEAK   DEFAULT   12 _ZSt4free
    41: 0000000000003140     8 OBJECT  GLOBAL DEFAULT   12 _ZN3CPU10installISRE
    42: 0000000000001183   456 FUNC    WEAK   DEFAULT    1 _ZN4ksym7loadsym[...]
    43: 0000000000003218     8 OBJECT  WEAK   DEFAULT   12 _ZSt6printf
    44: 0000000000003168     8 OBJECT  GLOBAL DEFAULT   12 _ZN6kvideo4rectE
    45: 0000000000001402    70 FUNC    GLOBAL DEFAULT    1 _Z9MouseWaitv
    46: 0000000000003148     8 OBJECT  GLOBAL DEFAULT   12 _ZN3CPU10installIRQE
    47: 0000000000003200     8 OBJECT  WEAK   DEFAULT   12 _ZN6kvideo11fron[...]
    48: 00000000000031f0     8 OBJECT  WEAK   DEFAULT   12 _ZN7kthread4exitE
    49: 0000000000001000   321 FUNC    GLOBAL DEFAULT    1 init
    50: 00000000000031a9     4 OBJECT  GLOBAL DEFAULT   12 MousePacket
    51: 00000000000031d8     8 OBJECT  WEAK   DEFAULT   12 _ZN6kinput10read[...]
    52: 00000000000013c5    33 FUNC    WEAK   DEFAULT    1 _ZN2IO4outwEtt
    53: 0000000000003160     8 OBJECT  GLOBAL DEFAULT   12 _ZN6kvideo10fill[...]
    54: 00000000000019f9    44 FUNC    WEAK   DEFAULT    1 _ZSt3maxIiERKT_S2_S2_
    55: 0000000000003170     8 OBJECT  GLOBAL DEFAULT   12 _ZN6kvideo4blitE
    56: 00000000000031c8     8 OBJECT  WEAK   DEFAULT   12 _ZN6kinput17trig[...]
    57: 00000000000031b0     8 OBJECT  WEAK   DEFAULT   12 _ZN3knl5panicE
    58: 0000000000003210     8 OBJECT  WEAK   DEFAULT   12 _ZSt6assert
    59: 00000000000031d0     8 OBJECT  WEAK   DEFAULT   12 _ZN6kinput11writ[...]
    60: 0000000000001389    29 FUNC    WEAK   DEFAULT    1 _ZN2IO3inlEt
    61: 0000000000001142    65 FUNC    WEAK   DEFAULT    1 _ZN6kinput6MsDataC2Ev
    62: 0000000000003178     8 OBJECT  GLOBAL DEFAULT   12 _ZN6kvideo11swap[...]
    63: 00000000000031c0     8 OBJECT  WEAK   DEFAULT   12 _ZN3knl10findModuleE
    64: 00000000000031a8     1 OBJECT  GLOBAL DEFAULT   12 MouseCycle
    65: 0000000000001481    21 FUNC    GLOBAL DEFAULT    1 _Z9MouseReadv
    66: 000000000000196b    98 FUNC    WEAK   DEFAULT    1 _Z7kmemcpyIcEPvS[...]
    67: 0000000000003220     8 OBJECT  WEAK   DEFAULT   12 _ZSt6malloc
    68: 00000000000019cd    44 FUNC    WEAK   DEFAULT    1 _ZSt3minIiERKT_S2_S2_
    69: 00000000000018b8    40 FUNC    WEAK   DEFAULT    1 _ZN3vecILm2EiEC1Eii
    70: 0000000000001496   568 FUNC    GLOBAL DEFAULT    1 _Z18ProcessMouse[...]
    71: 00000000000018e0    59 FUNC    WEAK   DEFAULT    1 _ZSt5clampIiERKT[...]
    72: 0000000000001142    65 FUNC    WEAK   DEFAULT    1 _ZN6kinput6MsDataC1Ev
    73: 0000000000001369    32 FUNC    WEAK   DEFAULT    1 _ZN2IO3inwEt
    74: 00000000000013e6    28 FUNC    WEAK   DEFAULT    1 _ZN2IO4outlEtj
    75: 00000000000031e8     8 OBJECT  WEAK   DEFAULT   12 _ZN7kthread5sleepE
    76: 00000000000031f8     4 OBJECT  WEAK   DEFAULT   12 _ZN6kvideo1WE

Histogram for bucket list length (total of 1 bucket):
 Length  Number     % of total  Coverage
      0  1          (100.0%)

No version information found in this file.






-------- objdump -s mouse.elf --------

../sysroot/drv/mouse.elf:     file format elf64-x86-64


Disassembly of section .text:

0000000000001000 <init>:
    1000:	55                   	push   %rbp
    1001:	48 89 e5             	mov    %rsp,%rbp
    1004:	48 83 ec 20          	sub    $0x20,%rsp
    1008:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    100c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1010:	48 89 c7             	mov    %rax,%rdi
    1013:	e8 6b 01 00 00       	call   1183 <_ZN4ksym7loadsymEPNS_6ksym_tE>
    1018:	48 8b 05 01 22 00 00 	mov    0x2201(%rip),%rax        # 3220 <_ZSt6malloc>
    101f:	bf 68 00 00 00       	mov    $0x68,%edi
    1024:	ff d0                	call   *%rax
    1026:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    102a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    102e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    1035:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1039:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    1040:	00 
    1041:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1045:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    104c:	00 
    104d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1051:	48 c7 40 18 01 00 00 	movq   $0x1,0x18(%rax)
    1058:	00 
    1059:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    105d:	48 c7 40 20 05 00 00 	movq   $0x5,0x20(%rax)
    1064:	00 
    1065:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1069:	c6 40 28 00          	movb   $0x0,0x28(%rax)
    106d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1071:	c6 40 29 00          	movb   $0x0,0x29(%rax)
    1075:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1079:	c6 40 2a 00          	movb   $0x0,0x2a(%rax)
    107d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1081:	c6 40 2b 00          	movb   $0x0,0x2b(%rax)
    1085:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1089:	c6 40 2c 00          	movb   $0x0,0x2c(%rax)
    108d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1091:	c6 40 2d 00          	movb   $0x0,0x2d(%rax)
    1095:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1099:	c6 40 2e 00          	movb   $0x0,0x2e(%rax)
    109d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10a1:	c6 40 2f 00          	movb   $0x0,0x2f(%rax)
    10a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10a9:	48 8d 15 73 07 00 00 	lea    0x773(%rip),%rdx        # 1823 <_ZL11driver_mainPv>
    10b0:	48 89 50 30          	mov    %rdx,0x30(%rax)
    10b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10b8:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
    10bf:	00 
    10c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10c4:	48 c7 40 40 00 00 00 	movq   $0x0,0x40(%rax)
    10cb:	00 
    10cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10d0:	48 8d 15 7b 07 00 00 	lea    0x77b(%rip),%rdx        # 1852 <_ZL11driver_readPvm>
    10d7:	48 89 50 48          	mov    %rdx,0x48(%rax)
    10db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10df:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    10e6:	00 
    10e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10eb:	48 c7 40 58 0c 00 00 	movq   $0xc,0x58(%rax)
    10f2:	00 
    10f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10f7:	48 8d 15 5b 06 00 00 	lea    0x65b(%rip),%rdx        # 1759 <_ZL11irq_handlerP10intframe_t>
    10fe:	48 89 50 60          	mov    %rdx,0x60(%rax)
    1102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1106:	48 83 c0 28          	add    $0x28,%rax
    110a:	ba 08 00 00 00       	mov    $0x8,%edx
    110f:	be 00 00 00 00       	mov    $0x0,%esi
    1114:	48 89 c7             	mov    %rax,%rdi
    1117:	e8 ff 07 00 00       	call   191b <_Z7kmemsetIcEPvS0_T_m>
    111c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1120:	48 83 c0 28          	add    $0x28,%rax
    1124:	ba 05 00 00 00       	mov    $0x5,%edx
    1129:	48 8d 0d e0 0e 00 00 	lea    0xee0(%rip),%rcx        # 2010 <_ZN2IOL4COM8E+0x2>
    1130:	48 89 ce             	mov    %rcx,%rsi
    1133:	48 89 c7             	mov    %rax,%rdi
    1136:	e8 30 08 00 00       	call   196b <_Z7kmemcpyIcEPvS0_PKvm>
    113b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    113f:	c9                   	leave
    1140:	c3                   	ret
    1141:	90                   	nop

0000000000001142 <_ZN6kinput6MsDataC1Ev>:
    1142:	55                   	push   %rbp
    1143:	48 89 e5             	mov    %rsp,%rbp
    1146:	48 83 ec 10          	sub    $0x10,%rsp
    114a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    114e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1152:	ba 00 00 00 00       	mov    $0x0,%edx
    1157:	be 00 00 00 00       	mov    $0x0,%esi
    115c:	48 89 c7             	mov    %rax,%rdi
    115f:	e8 54 07 00 00       	call   18b8 <_ZN3vecILm2EiEC1Eii>
    1164:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1168:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    116c:	48 89 50 08          	mov    %rdx,0x8(%rax)
    1170:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1174:	48 8d 50 04          	lea    0x4(%rax),%rdx
    1178:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    117c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    1180:	90                   	nop
    1181:	c9                   	leave
    1182:	c3                   	ret

0000000000001183 <_ZN4ksym7loadsymEPNS_6ksym_tE>:
    1183:	55                   	push   %rbp
    1184:	48 89 e5             	mov    %rsp,%rbp
    1187:	48 83 ec 38          	sub    $0x38,%rsp
    118b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    118f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1193:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1197:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    119b:	48 8b 00             	mov    (%rax),%rax
    119e:	48 89 05 6b 20 00 00 	mov    %rax,0x206b(%rip)        # 3210 <_ZSt6assert>
    11a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    11a9:	48 8b 40 08          	mov    0x8(%rax),%rax
    11ad:	48 89 05 64 20 00 00 	mov    %rax,0x2064(%rip)        # 3218 <_ZSt6printf>
    11b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    11b8:	48 8b 40 10          	mov    0x10(%rax),%rax
    11bc:	48 89 05 5d 20 00 00 	mov    %rax,0x205d(%rip)        # 3220 <_ZSt6malloc>
    11c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    11c7:	48 8b 40 18          	mov    0x18(%rax),%rax
    11cb:	48 89 05 56 20 00 00 	mov    %rax,0x2056(%rip)        # 3228 <_ZSt7realloc>
    11d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    11d6:	48 8b 40 20          	mov    0x20(%rax),%rax
    11da:	48 89 05 4f 20 00 00 	mov    %rax,0x204f(%rip)        # 3230 <_ZSt4free>
    11e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    11e5:	48 8b 40 28          	mov    0x28(%rax),%rax
    11e9:	48 89 05 48 20 00 00 	mov    %rax,0x2048(%rip)        # 3238 <_ZSt5clock>
    11f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    11f4:	48 8b 40 30          	mov    0x30(%rax),%rax
    11f8:	48 89 05 41 20 00 00 	mov    %rax,0x2041(%rip)        # 3240 <_ZSt5fopen>
    11ff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1203:	48 83 c0 38          	add    $0x38,%rax
    1207:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    120b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    120f:	8b 00                	mov    (%rax),%eax
    1211:	89 05 e1 1f 00 00    	mov    %eax,0x1fe1(%rip)        # 31f8 <_ZN6kvideo1WE>
    1217:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    121b:	8b 40 04             	mov    0x4(%rax),%eax
    121e:	89 05 d8 1f 00 00    	mov    %eax,0x1fd8(%rip)        # 31fc <_ZN6kvideo1HE>
    1224:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1228:	48 8b 40 08          	mov    0x8(%rax),%rax
    122c:	48 89 05 cd 1f 00 00 	mov    %rax,0x1fcd(%rip)        # 3200 <_ZN6kvideo11frontbufferE>
    1233:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1237:	48 8b 40 10          	mov    0x10(%rax),%rax
    123b:	48 89 05 c6 1f 00 00 	mov    %rax,0x1fc6(%rip)        # 3208 <_ZN6kvideo10backbufferE>
    1242:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1246:	48 8b 40 18          	mov    0x18(%rax),%rax
    124a:	48 89 05 ff 1e 00 00 	mov    %rax,0x1eff(%rip)        # 3150 <_ZN6kvideo11clearBufferE>
    1251:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1255:	48 8b 40 20          	mov    0x20(%rax),%rax
    1259:	48 89 05 f8 1e 00 00 	mov    %rax,0x1ef8(%rip)        # 3158 <_ZN6kvideo9fillColorE>
    1260:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1264:	48 8b 40 28          	mov    0x28(%rax),%rax
    1268:	48 89 05 f1 1e 00 00 	mov    %rax,0x1ef1(%rip)        # 3160 <_ZN6kvideo10fillBufferE>
    126f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1273:	48 8b 40 30          	mov    0x30(%rax),%rax
    1277:	48 89 05 ea 1e 00 00 	mov    %rax,0x1eea(%rip)        # 3168 <_ZN6kvideo4rectE>
    127e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1282:	48 8b 40 38          	mov    0x38(%rax),%rax
    1286:	48 89 05 e3 1e 00 00 	mov    %rax,0x1ee3(%rip)        # 3170 <_ZN6kvideo4blitE>
    128d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1291:	48 8b 40 40          	mov    0x40(%rax),%rax
    1295:	48 89 05 dc 1e 00 00 	mov    %rax,0x1edc(%rip)        # 3178 <_ZN6kvideo11swapBuffersE>
    129c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    12a0:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
    12a4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    12a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    12ac:	48 8b 00             	mov    (%rax),%rax
    12af:	48 89 05 2a 1f 00 00 	mov    %rax,0x1f2a(%rip)        # 31e0 <_ZN7kthread5yieldE>
    12b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    12ba:	48 8b 40 08          	mov    0x8(%rax),%rax
    12be:	48 89 05 23 1f 00 00 	mov    %rax,0x1f23(%rip)        # 31e8 <_ZN7kthread5sleepE>
    12c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    12c9:	48 8b 40 10          	mov    0x10(%rax),%rax
    12cd:	48 89 05 1c 1f 00 00 	mov    %rax,0x1f1c(%rip)        # 31f0 <_ZN7kthread4exitE>
    12d4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    12d8:	48 05 98 00 00 00    	add    $0x98,%rax
    12de:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    12e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    12e6:	48 8b 00             	mov    (%rax),%rax
    12e9:	48 89 05 d8 1e 00 00 	mov    %rax,0x1ed8(%rip)        # 31c8 <_ZN6kinput17triggerMouseEventE>
    12f0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    12f4:	48 8b 40 08          	mov    0x8(%rax),%rax
    12f8:	48 89 05 d1 1e 00 00 	mov    %rax,0x1ed1(%rip)        # 31d0 <_ZN6kinput11writeMsDataE>
    12ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1303:	48 8b 40 10          	mov    0x10(%rax),%rax
    1307:	48 89 05 ca 1e 00 00 	mov    %rax,0x1eca(%rip)        # 31d8 <_ZN6kinput10readMsDataE>
    130e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1312:	48 05 b0 00 00 00    	add    $0xb0,%rax
    1318:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    131c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1320:	48 8b 00             	mov    (%rax),%rax
    1323:	48 89 05 86 1e 00 00 	mov    %rax,0x1e86(%rip)        # 31b0 <_ZN3knl5panicE>
    132a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    132e:	48 8b 40 08          	mov    0x8(%rax),%rax
    1332:	48 89 05 7f 1e 00 00 	mov    %rax,0x1e7f(%rip)        # 31b8 <_ZN3knl3hcfE>
    1339:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    133d:	48 8b 40 10          	mov    0x10(%rax),%rax
    1341:	48 89 05 78 1e 00 00 	mov    %rax,0x1e78(%rip)        # 31c0 <_ZN3knl10findModuleE>
    1348:	90                   	nop
    1349:	c9                   	leave
    134a:	c3                   	ret

000000000000134b <_ZN2IO3inbEt>:
    134b:	55                   	push   %rbp
    134c:	48 89 e5             	mov    %rsp,%rbp
    134f:	48 83 ec 18          	sub    $0x18,%rsp
    1353:	89 f8                	mov    %edi,%eax
    1355:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
    1359:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax
    135d:	89 c2                	mov    %eax,%edx
    135f:	ec                   	in     (%dx),%al
    1360:	88 45 ff             	mov    %al,-0x1(%rbp)
    1363:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    1367:	c9                   	leave
    1368:	c3                   	ret

0000000000001369 <_ZN2IO3inwEt>:
    1369:	55                   	push   %rbp
    136a:	48 89 e5             	mov    %rsp,%rbp
    136d:	48 83 ec 18          	sub    $0x18,%rsp
    1371:	89 f8                	mov    %edi,%eax
    1373:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
    1377:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax
    137b:	89 c2                	mov    %eax,%edx
    137d:	66 ed                	in     (%dx),%ax
    137f:	66 89 45 fe          	mov    %ax,-0x2(%rbp)
    1383:	0f b7 45 fe          	movzwl -0x2(%rbp),%eax
    1387:	c9                   	leave
    1388:	c3                   	ret

0000000000001389 <_ZN2IO3inlEt>:
    1389:	55                   	push   %rbp
    138a:	48 89 e5             	mov    %rsp,%rbp
    138d:	48 83 ec 18          	sub    $0x18,%rsp
    1391:	89 f8                	mov    %edi,%eax
    1393:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
    1397:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax
    139b:	89 c2                	mov    %eax,%edx
    139d:	ed                   	in     (%dx),%eax
    139e:	89 45 fc             	mov    %eax,-0x4(%rbp)
    13a1:	8b 45 fc             	mov    -0x4(%rbp),%eax
    13a4:	c9                   	leave
    13a5:	c3                   	ret

00000000000013a6 <_ZN2IO4outbEth>:
    13a6:	55                   	push   %rbp
    13a7:	48 89 e5             	mov    %rsp,%rbp
    13aa:	48 83 ec 08          	sub    $0x8,%rsp
    13ae:	89 fa                	mov    %edi,%edx
    13b0:	89 f0                	mov    %esi,%eax
    13b2:	66 89 55 fc          	mov    %dx,-0x4(%rbp)
    13b6:	88 45 f8             	mov    %al,-0x8(%rbp)
    13b9:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax
    13bd:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx
    13c1:	ee                   	out    %al,(%dx)
    13c2:	90                   	nop
    13c3:	c9                   	leave
    13c4:	c3                   	ret

00000000000013c5 <_ZN2IO4outwEtt>:
    13c5:	55                   	push   %rbp
    13c6:	48 89 e5             	mov    %rsp,%rbp
    13c9:	48 83 ec 08          	sub    $0x8,%rsp
    13cd:	89 fa                	mov    %edi,%edx
    13cf:	89 f0                	mov    %esi,%eax
    13d1:	66 89 55 fc          	mov    %dx,-0x4(%rbp)
    13d5:	66 89 45 f8          	mov    %ax,-0x8(%rbp)
    13d9:	0f b7 45 f8          	movzwl -0x8(%rbp),%eax
    13dd:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx
    13e1:	66 ef                	out    %ax,(%dx)
    13e3:	90                   	nop
    13e4:	c9                   	leave
    13e5:	c3                   	ret

00000000000013e6 <_ZN2IO4outlEtj>:
    13e6:	55                   	push   %rbp
    13e7:	48 89 e5             	mov    %rsp,%rbp
    13ea:	48 83 ec 08          	sub    $0x8,%rsp
    13ee:	89 f8                	mov    %edi,%eax
    13f0:	89 75 f8             	mov    %esi,-0x8(%rbp)
    13f3:	66 89 45 fc          	mov    %ax,-0x4(%rbp)
    13f7:	8b 45 f8             	mov    -0x8(%rbp),%eax
    13fa:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx
    13fe:	ef                   	out    %eax,(%dx)
    13ff:	90                   	nop
    1400:	c9                   	leave
    1401:	c3                   	ret

0000000000001402 <_Z9MouseWaitv>:
    1402:	55                   	push   %rbp
    1403:	48 89 e5             	mov    %rsp,%rbp
    1406:	48 83 ec 10          	sub    $0x10,%rsp
    140a:	48 c7 45 f8 a0 86 01 	movq   $0x186a0,-0x8(%rbp)
    1411:	00 
    1412:	eb 19                	jmp    142d <_Z9MouseWaitv+0x2b>
    1414:	bf 64 00 00 00       	mov    $0x64,%edi
    1419:	e8 2d ff ff ff       	call   134b <_ZN2IO3inbEt>
    141e:	0f b6 c0             	movzbl %al,%eax
    1421:	83 e0 02             	and    $0x2,%eax
    1424:	85 c0                	test   %eax,%eax
    1426:	0f 94 c0             	sete   %al
    1429:	84 c0                	test   %al,%al
    142b:	75 18                	jne    1445 <_Z9MouseWaitv+0x43>
    142d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1431:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    1435:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    1439:	48 85 c0             	test   %rax,%rax
    143c:	0f 95 c0             	setne  %al
    143f:	84 c0                	test   %al,%al
    1441:	75 d1                	jne    1414 <_Z9MouseWaitv+0x12>
    1443:	eb 01                	jmp    1446 <_Z9MouseWaitv+0x44>
    1445:	90                   	nop
    1446:	c9                   	leave
    1447:	c3                   	ret

0000000000001448 <_ZL10MouseWriteh>:
    1448:	55                   	push   %rbp
    1449:	48 89 e5             	mov    %rsp,%rbp
    144c:	48 83 ec 10          	sub    $0x10,%rsp
    1450:	89 f8                	mov    %edi,%eax
    1452:	88 45 fc             	mov    %al,-0x4(%rbp)
    1455:	e8 a8 ff ff ff       	call   1402 <_Z9MouseWaitv>
    145a:	be d4 00 00 00       	mov    $0xd4,%esi
    145f:	bf 64 00 00 00       	mov    $0x64,%edi
    1464:	e8 3d ff ff ff       	call   13a6 <_ZN2IO4outbEth>
    1469:	e8 94 ff ff ff       	call   1402 <_Z9MouseWaitv>
    146e:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
    1472:	89 c6                	mov    %eax,%esi
    1474:	bf 60 00 00 00       	mov    $0x60,%edi
    1479:	e8 28 ff ff ff       	call   13a6 <_ZN2IO4outbEth>
    147e:	90                   	nop
    147f:	c9                   	leave
    1480:	c3                   	ret

0000000000001481 <_Z9MouseReadv>:
    1481:	55                   	push   %rbp
    1482:	48 89 e5             	mov    %rsp,%rbp
    1485:	e8 78 ff ff ff       	call   1402 <_Z9MouseWaitv>
    148a:	bf 60 00 00 00       	mov    $0x60,%edi
    148f:	e8 b7 fe ff ff       	call   134b <_ZN2IO3inbEt>
    1494:	5d                   	pop    %rbp
    1495:	c3                   	ret

0000000000001496 <_Z18ProcessMousePacketv>:
    1496:	55                   	push   %rbp
    1497:	48 89 e5             	mov    %rsp,%rbp
    149a:	48 83 ec 20          	sub    $0x20,%rsp
    149e:	0f b6 05 08 1d 00 00 	movzbl 0x1d08(%rip),%eax        # 31ad <MousePacketReady>
    14a5:	83 f0 01             	xor    $0x1,%eax
    14a8:	84 c0                	test   %al,%al
    14aa:	74 0a                	je     14b6 <_Z18ProcessMousePacketv+0x20>
    14ac:	b8 00 00 00 00       	mov    $0x0,%eax
    14b1:	e9 16 02 00 00       	jmp    16cc <_Z18ProcessMousePacketv+0x236>
    14b6:	0f b6 05 ec 1c 00 00 	movzbl 0x1cec(%rip),%eax        # 31a9 <MousePacket>
    14bd:	0f b6 c0             	movzbl %al,%eax
    14c0:	83 e0 01             	and    $0x1,%eax
    14c3:	89 05 cf 1c 00 00    	mov    %eax,0x1ccf(%rip)        # 3198 <msdata+0x18>
    14c9:	0f b6 05 d9 1c 00 00 	movzbl 0x1cd9(%rip),%eax        # 31a9 <MousePacket>
    14d0:	0f b6 c0             	movzbl %al,%eax
    14d3:	83 e0 02             	and    $0x2,%eax
    14d6:	89 05 c4 1c 00 00    	mov    %eax,0x1cc4(%rip)        # 31a0 <msdata+0x20>
    14dc:	0f b6 05 c6 1c 00 00 	movzbl 0x1cc6(%rip),%eax        # 31a9 <MousePacket>
    14e3:	0f b6 c0             	movzbl %al,%eax
    14e6:	83 e0 10             	and    $0x10,%eax
    14e9:	85 c0                	test   %eax,%eax
    14eb:	0f 95 c0             	setne  %al
    14ee:	88 45 ff             	mov    %al,-0x1(%rbp)
    14f1:	0f b6 05 b1 1c 00 00 	movzbl 0x1cb1(%rip),%eax        # 31a9 <MousePacket>
    14f8:	0f b6 c0             	movzbl %al,%eax
    14fb:	83 e0 20             	and    $0x20,%eax
    14fe:	85 c0                	test   %eax,%eax
    1500:	0f 95 c0             	setne  %al
    1503:	88 45 fe             	mov    %al,-0x2(%rbp)
    1506:	0f b6 05 9c 1c 00 00 	movzbl 0x1c9c(%rip),%eax        # 31a9 <MousePacket>
    150d:	0f b6 c0             	movzbl %al,%eax
    1510:	83 e0 40             	and    $0x40,%eax
    1513:	85 c0                	test   %eax,%eax
    1515:	0f 95 c0             	setne  %al
    1518:	88 45 fd             	mov    %al,-0x3(%rbp)
    151b:	0f b6 05 87 1c 00 00 	movzbl 0x1c87(%rip),%eax        # 31a9 <MousePacket>
    1522:	c0 e8 07             	shr    $0x7,%al
    1525:	88 45 fc             	mov    %al,-0x4(%rbp)
    1528:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    152c:	83 f0 01             	xor    $0x1,%eax
    152f:	84 c0                	test   %al,%al
    1531:	74 3e                	je     1571 <_Z18ProcessMousePacketv+0xdb>
    1533:	48 8b 05 4e 1c 00 00 	mov    0x1c4e(%rip),%rax        # 3188 <msdata+0x8>
    153a:	8b 08                	mov    (%rax),%ecx
    153c:	0f b6 05 67 1c 00 00 	movzbl 0x1c67(%rip),%eax        # 31aa <MousePacket+0x1>
    1543:	0f b6 d0             	movzbl %al,%edx
    1546:	48 8b 05 3b 1c 00 00 	mov    0x1c3b(%rip),%rax        # 3188 <msdata+0x8>
    154d:	01 ca                	add    %ecx,%edx
    154f:	89 10                	mov    %edx,(%rax)
    1551:	80 7d fd 00          	cmpb   $0x0,-0x3(%rbp)
    1555:	74 65                	je     15bc <_Z18ProcessMousePacketv+0x126>
    1557:	48 8b 05 2a 1c 00 00 	mov    0x1c2a(%rip),%rax        # 3188 <msdata+0x8>
    155e:	8b 10                	mov    (%rax),%edx
    1560:	48 8b 05 21 1c 00 00 	mov    0x1c21(%rip),%rax        # 3188 <msdata+0x8>
    1567:	81 c2 ff 00 00 00    	add    $0xff,%edx
    156d:	89 10                	mov    %edx,(%rax)
    156f:	eb 4b                	jmp    15bc <_Z18ProcessMousePacketv+0x126>
    1571:	0f b6 05 32 1c 00 00 	movzbl 0x1c32(%rip),%eax        # 31aa <MousePacket+0x1>
    1578:	f7 d8                	neg    %eax
    157a:	88 05 2a 1c 00 00    	mov    %al,0x1c2a(%rip)        # 31aa <MousePacket+0x1>
    1580:	48 8b 05 01 1c 00 00 	mov    0x1c01(%rip),%rax        # 3188 <msdata+0x8>
    1587:	8b 08                	mov    (%rax),%ecx
    1589:	0f b6 05 1a 1c 00 00 	movzbl 0x1c1a(%rip),%eax        # 31aa <MousePacket+0x1>
    1590:	0f b6 d0             	movzbl %al,%edx
    1593:	48 8b 05 ee 1b 00 00 	mov    0x1bee(%rip),%rax        # 3188 <msdata+0x8>
    159a:	29 d1                	sub    %edx,%ecx
    159c:	89 08                	mov    %ecx,(%rax)
    159e:	80 7d fd 00          	cmpb   $0x0,-0x3(%rbp)
    15a2:	74 18                	je     15bc <_Z18ProcessMousePacketv+0x126>
    15a4:	48 8b 05 dd 1b 00 00 	mov    0x1bdd(%rip),%rax        # 3188 <msdata+0x8>
    15ab:	8b 10                	mov    (%rax),%edx
    15ad:	48 8b 05 d4 1b 00 00 	mov    0x1bd4(%rip),%rax        # 3188 <msdata+0x8>
    15b4:	81 ea ff 00 00 00    	sub    $0xff,%edx
    15ba:	89 10                	mov    %edx,(%rax)
    15bc:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
    15c0:	83 f0 01             	xor    $0x1,%eax
    15c3:	84 c0                	test   %al,%al
    15c5:	74 3e                	je     1605 <_Z18ProcessMousePacketv+0x16f>
    15c7:	48 8b 05 c2 1b 00 00 	mov    0x1bc2(%rip),%rax        # 3190 <msdata+0x10>
    15ce:	8b 08                	mov    (%rax),%ecx
    15d0:	0f b6 05 d4 1b 00 00 	movzbl 0x1bd4(%rip),%eax        # 31ab <MousePacket+0x2>
    15d7:	0f b6 d0             	movzbl %al,%edx
    15da:	48 8b 05 af 1b 00 00 	mov    0x1baf(%rip),%rax        # 3190 <msdata+0x10>
    15e1:	29 d1                	sub    %edx,%ecx
    15e3:	89 08                	mov    %ecx,(%rax)
    15e5:	80 7d fc 00          	cmpb   $0x0,-0x4(%rbp)
    15e9:	74 65                	je     1650 <_Z18ProcessMousePacketv+0x1ba>
    15eb:	48 8b 05 9e 1b 00 00 	mov    0x1b9e(%rip),%rax        # 3190 <msdata+0x10>
    15f2:	8b 10                	mov    (%rax),%edx
    15f4:	48 8b 05 95 1b 00 00 	mov    0x1b95(%rip),%rax        # 3190 <msdata+0x10>
    15fb:	81 ea ff 00 00 00    	sub    $0xff,%edx
    1601:	89 10                	mov    %edx,(%rax)
    1603:	eb 4b                	jmp    1650 <_Z18ProcessMousePacketv+0x1ba>
    1605:	0f b6 05 9f 1b 00 00 	movzbl 0x1b9f(%rip),%eax        # 31ab <MousePacket+0x2>
    160c:	f7 d8                	neg    %eax
    160e:	88 05 97 1b 00 00    	mov    %al,0x1b97(%rip)        # 31ab <MousePacket+0x2>
    1614:	48 8b 05 75 1b 00 00 	mov    0x1b75(%rip),%rax        # 3190 <msdata+0x10>
    161b:	8b 08                	mov    (%rax),%ecx
    161d:	0f b6 05 87 1b 00 00 	movzbl 0x1b87(%rip),%eax        # 31ab <MousePacket+0x2>
    1624:	0f b6 d0             	movzbl %al,%edx
    1627:	48 8b 05 62 1b 00 00 	mov    0x1b62(%rip),%rax        # 3190 <msdata+0x10>
    162e:	01 ca                	add    %ecx,%edx
    1630:	89 10                	mov    %edx,(%rax)
    1632:	80 7d fc 00          	cmpb   $0x0,-0x4(%rbp)
    1636:	74 18                	je     1650 <_Z18ProcessMousePacketv+0x1ba>
    1638:	48 8b 05 51 1b 00 00 	mov    0x1b51(%rip),%rax        # 3190 <msdata+0x10>
    163f:	8b 10                	mov    (%rax),%edx
    1641:	48 8b 05 48 1b 00 00 	mov    0x1b48(%rip),%rax        # 3190 <msdata+0x10>
    1648:	81 c2 ff 00 00 00    	add    $0xff,%edx
    164e:	89 10                	mov    %edx,(%rax)
    1650:	8b 05 a2 1b 00 00    	mov    0x1ba2(%rip),%eax        # 31f8 <_ZN6kvideo1WE>
    1656:	83 e8 01             	sub    $0x1,%eax
    1659:	89 45 ec             	mov    %eax,-0x14(%rbp)
    165c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    1663:	48 8b 05 1e 1b 00 00 	mov    0x1b1e(%rip),%rax        # 3188 <msdata+0x8>
    166a:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
    166e:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    1672:	48 89 ce             	mov    %rcx,%rsi
    1675:	48 89 c7             	mov    %rax,%rdi
    1678:	e8 63 02 00 00       	call   18e0 <_ZSt5clampIiERKT_S2_S2_S2_>
    167d:	48 8b 15 04 1b 00 00 	mov    0x1b04(%rip),%rdx        # 3188 <msdata+0x8>
    1684:	8b 00                	mov    (%rax),%eax
    1686:	89 02                	mov    %eax,(%rdx)
    1688:	8b 05 6a 1b 00 00    	mov    0x1b6a(%rip),%eax        # 31f8 <_ZN6kvideo1WE>
    168e:	83 e8 01             	sub    $0x1,%eax
    1691:	89 45 f4             	mov    %eax,-0xc(%rbp)
    1694:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    169b:	48 8b 05 ee 1a 00 00 	mov    0x1aee(%rip),%rax        # 3190 <msdata+0x10>
    16a2:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
    16a6:	48 8d 4d f8          	lea    -0x8(%rbp),%rcx
    16aa:	48 89 ce             	mov    %rcx,%rsi
    16ad:	48 89 c7             	mov    %rax,%rdi
    16b0:	e8 2b 02 00 00       	call   18e0 <_ZSt5clampIiERKT_S2_S2_S2_>
    16b5:	48 8b 15 d4 1a 00 00 	mov    0x1ad4(%rip),%rdx        # 3190 <msdata+0x10>
    16bc:	8b 00                	mov    (%rax),%eax
    16be:	89 02                	mov    %eax,(%rdx)
    16c0:	c6 05 e6 1a 00 00 00 	movb   $0x0,0x1ae6(%rip)        # 31ad <MousePacketReady>
    16c7:	b8 01 00 00 00       	mov    $0x1,%eax
    16cc:	c9                   	leave
    16cd:	c3                   	ret

00000000000016ce <_ZL10mouse_initv>:
    16ce:	55                   	push   %rbp
    16cf:	48 89 e5             	mov    %rsp,%rbp
    16d2:	48 83 ec 10          	sub    $0x10,%rsp
    16d6:	be a8 00 00 00       	mov    $0xa8,%esi
    16db:	bf 64 00 00 00       	mov    $0x64,%edi
    16e0:	e8 c1 fc ff ff       	call   13a6 <_ZN2IO4outbEth>
    16e5:	e8 18 fd ff ff       	call   1402 <_Z9MouseWaitv>
    16ea:	be 20 00 00 00       	mov    $0x20,%esi
    16ef:	bf 64 00 00 00       	mov    $0x64,%edi
    16f4:	e8 ad fc ff ff       	call   13a6 <_ZN2IO4outbEth>
    16f9:	e8 04 fd ff ff       	call   1402 <_Z9MouseWaitv>
    16fe:	bf 60 00 00 00       	mov    $0x60,%edi
    1703:	e8 43 fc ff ff       	call   134b <_ZN2IO3inbEt>
    1708:	88 45 ff             	mov    %al,-0x1(%rbp)
    170b:	80 4d ff 02          	orb    $0x2,-0x1(%rbp)
    170f:	e8 ee fc ff ff       	call   1402 <_Z9MouseWaitv>
    1714:	be 60 00 00 00       	mov    $0x60,%esi
    1719:	bf 64 00 00 00       	mov    $0x64,%edi
    171e:	e8 83 fc ff ff       	call   13a6 <_ZN2IO4outbEth>
    1723:	e8 da fc ff ff       	call   1402 <_Z9MouseWaitv>
    1728:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    172c:	89 c6                	mov    %eax,%esi
    172e:	bf 60 00 00 00       	mov    $0x60,%edi
    1733:	e8 6e fc ff ff       	call   13a6 <_ZN2IO4outbEth>
    1738:	bf f6 00 00 00       	mov    $0xf6,%edi
    173d:	e8 06 fd ff ff       	call   1448 <_ZL10MouseWriteh>
    1742:	e8 3a fd ff ff       	call   1481 <_Z9MouseReadv>
    1747:	bf f4 00 00 00       	mov    $0xf4,%edi
    174c:	e8 f7 fc ff ff       	call   1448 <_ZL10MouseWriteh>
    1751:	e8 2b fd ff ff       	call   1481 <_Z9MouseReadv>
    1756:	90                   	nop
    1757:	c9                   	leave
    1758:	c3                   	ret

0000000000001759 <_ZL11irq_handlerP10intframe_t>:
    1759:	55                   	push   %rbp
    175a:	48 89 e5             	mov    %rsp,%rbp
    175d:	48 83 ec 20          	sub    $0x20,%rsp
    1761:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1765:	bf 60 00 00 00       	mov    $0x60,%edi
    176a:	e8 dc fb ff ff       	call   134b <_ZN2IO3inbEt>
    176f:	88 45 ff             	mov    %al,-0x1(%rbp)
    1772:	0f b6 05 2f 1a 00 00 	movzbl 0x1a2f(%rip),%eax        # 31a8 <MouseCycle>
    1779:	0f b6 c0             	movzbl %al,%eax
    177c:	83 f8 02             	cmp    $0x2,%eax
    177f:	74 70                	je     17f1 <_ZL11irq_handlerP10intframe_t+0x98>
    1781:	83 f8 02             	cmp    $0x2,%eax
    1784:	0f 8f 96 00 00 00    	jg     1820 <_ZL11irq_handlerP10intframe_t+0xc7>
    178a:	85 c0                	test   %eax,%eax
    178c:	74 0a                	je     1798 <_ZL11irq_handlerP10intframe_t+0x3f>
    178e:	83 f8 01             	cmp    $0x1,%eax
    1791:	74 37                	je     17ca <_ZL11irq_handlerP10intframe_t+0x71>
    1793:	e9 88 00 00 00       	jmp    1820 <_ZL11irq_handlerP10intframe_t+0xc7>
    1798:	0f b6 05 0e 1a 00 00 	movzbl 0x1a0e(%rip),%eax        # 31ad <MousePacketReady>
    179f:	84 c0                	test   %al,%al
    17a1:	75 73                	jne    1816 <_ZL11irq_handlerP10intframe_t+0xbd>
    17a3:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    17a7:	83 e0 08             	and    $0x8,%eax
    17aa:	85 c0                	test   %eax,%eax
    17ac:	74 6b                	je     1819 <_ZL11irq_handlerP10intframe_t+0xc0>
    17ae:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    17b2:	88 05 f1 19 00 00    	mov    %al,0x19f1(%rip)        # 31a9 <MousePacket>
    17b8:	0f b6 05 e9 19 00 00 	movzbl 0x19e9(%rip),%eax        # 31a8 <MouseCycle>
    17bf:	83 c0 01             	add    $0x1,%eax
    17c2:	88 05 e0 19 00 00    	mov    %al,0x19e0(%rip)        # 31a8 <MouseCycle>
    17c8:	eb 56                	jmp    1820 <_ZL11irq_handlerP10intframe_t+0xc7>
    17ca:	0f b6 05 dc 19 00 00 	movzbl 0x19dc(%rip),%eax        # 31ad <MousePacketReady>
    17d1:	84 c0                	test   %al,%al
    17d3:	75 47                	jne    181c <_ZL11irq_handlerP10intframe_t+0xc3>
    17d5:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    17d9:	88 05 cb 19 00 00    	mov    %al,0x19cb(%rip)        # 31aa <MousePacket+0x1>
    17df:	0f b6 05 c2 19 00 00 	movzbl 0x19c2(%rip),%eax        # 31a8 <MouseCycle>
    17e6:	83 c0 01             	add    $0x1,%eax
    17e9:	88 05 b9 19 00 00    	mov    %al,0x19b9(%rip)        # 31a8 <MouseCycle>
    17ef:	eb 2f                	jmp    1820 <_ZL11irq_handlerP10intframe_t+0xc7>
    17f1:	0f b6 05 b5 19 00 00 	movzbl 0x19b5(%rip),%eax        # 31ad <MousePacketReady>
    17f8:	84 c0                	test   %al,%al
    17fa:	75 23                	jne    181f <_ZL11irq_handlerP10intframe_t+0xc6>
    17fc:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    1800:	88 05 a5 19 00 00    	mov    %al,0x19a5(%rip)        # 31ab <MousePacket+0x2>
    1806:	c6 05 a0 19 00 00 01 	movb   $0x1,0x19a0(%rip)        # 31ad <MousePacketReady>
    180d:	c6 05 94 19 00 00 00 	movb   $0x0,0x1994(%rip)        # 31a8 <MouseCycle>
    1814:	eb 0a                	jmp    1820 <_ZL11irq_handlerP10intframe_t+0xc7>
    1816:	90                   	nop
    1817:	eb 07                	jmp    1820 <_ZL11irq_handlerP10intframe_t+0xc7>
    1819:	90                   	nop
    181a:	eb 04                	jmp    1820 <_ZL11irq_handlerP10intframe_t+0xc7>
    181c:	90                   	nop
    181d:	eb 01                	jmp    1820 <_ZL11irq_handlerP10intframe_t+0xc7>
    181f:	90                   	nop
    1820:	90                   	nop
    1821:	c9                   	leave
    1822:	c3                   	ret

0000000000001823 <_ZL11driver_mainPv>:
    1823:	55                   	push   %rbp
    1824:	48 89 e5             	mov    %rsp,%rbp
    1827:	48 83 ec 10          	sub    $0x10,%rsp
    182b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    182f:	e8 9a fe ff ff       	call   16ce <_ZL10mouse_initv>
    1834:	e8 5d fc ff ff       	call   1496 <_Z18ProcessMousePacketv>
    1839:	84 c0                	test   %al,%al
    183b:	74 f7                	je     1834 <_ZL11driver_mainPv+0x11>
    183d:	48 8b 05 8c 19 00 00 	mov    0x198c(%rip),%rax        # 31d0 <_ZN6kinput11writeMsDataE>
    1844:	48 8d 15 35 19 00 00 	lea    0x1935(%rip),%rdx        # 3180 <msdata>
    184b:	48 89 d7             	mov    %rdx,%rdi
    184e:	ff d0                	call   *%rax
    1850:	eb e2                	jmp    1834 <_ZL11driver_mainPv+0x11>

0000000000001852 <_ZL11driver_readPvm>:
    1852:	55                   	push   %rbp
    1853:	48 89 e5             	mov    %rsp,%rbp
    1856:	48 83 ec 30          	sub    $0x30,%rsp
    185a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    185e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    1862:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1866:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    186a:	48 8d 05 0f 19 00 00 	lea    0x190f(%rip),%rax        # 3180 <msdata>
    1871:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1875:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    187c:	00 
    187d:	eb 22                	jmp    18a1 <_ZL11driver_readPvm+0x4f>
    187f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1883:	48 8d 50 01          	lea    0x1(%rax),%rdx
    1887:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    188b:	0f b6 10             	movzbl (%rax),%edx
    188e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1892:	48 8d 48 01          	lea    0x1(%rax),%rcx
    1896:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
    189a:	88 10                	mov    %dl,(%rax)
    189c:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    18a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    18a5:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
    18a9:	73 07                	jae    18b2 <_ZL11driver_readPvm+0x60>
    18ab:	48 83 7d e8 27       	cmpq   $0x27,-0x18(%rbp)
    18b0:	76 cd                	jbe    187f <_ZL11driver_readPvm+0x2d>
    18b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    18b6:	c9                   	leave
    18b7:	c3                   	ret

00000000000018b8 <_ZN3vecILm2EiEC1Eii>:
    18b8:	55                   	push   %rbp
    18b9:	48 89 e5             	mov    %rsp,%rbp
    18bc:	48 83 ec 10          	sub    $0x10,%rsp
    18c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    18c4:	89 75 f4             	mov    %esi,-0xc(%rbp)
    18c7:	89 55 f0             	mov    %edx,-0x10(%rbp)
    18ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    18ce:	8b 55 f4             	mov    -0xc(%rbp),%edx
    18d1:	89 10                	mov    %edx,(%rax)
    18d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    18d7:	8b 55 f0             	mov    -0x10(%rbp),%edx
    18da:	89 50 04             	mov    %edx,0x4(%rax)
    18dd:	90                   	nop
    18de:	c9                   	leave
    18df:	c3                   	ret

00000000000018e0 <_ZSt5clampIiERKT_S2_S2_S2_>:
    18e0:	55                   	push   %rbp
    18e1:	48 89 e5             	mov    %rsp,%rbp
    18e4:	48 83 ec 20          	sub    $0x20,%rsp
    18e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    18ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    18f0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    18f4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    18f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    18fc:	48 89 d6             	mov    %rdx,%rsi
    18ff:	48 89 c7             	mov    %rax,%rdi
    1902:	e8 c6 00 00 00       	call   19cd <_ZSt3minIiERKT_S2_S2_>
    1907:	48 89 c2             	mov    %rax,%rdx
    190a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    190e:	48 89 d6             	mov    %rdx,%rsi
    1911:	48 89 c7             	mov    %rax,%rdi
    1914:	e8 e0 00 00 00       	call   19f9 <_ZSt3maxIiERKT_S2_S2_>
    1919:	c9                   	leave
    191a:	c3                   	ret

000000000000191b <_Z7kmemsetIcEPvS0_T_m>:
    191b:	55                   	push   %rbp
    191c:	48 89 e5             	mov    %rsp,%rbp
    191f:	48 83 ec 28          	sub    $0x28,%rsp
    1923:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1927:	89 f0                	mov    %esi,%eax
    1929:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    192d:	88 45 e4             	mov    %al,-0x1c(%rbp)
    1930:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1934:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1938:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    193c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1940:	48 01 d0             	add    %rdx,%rax
    1943:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1947:	eb 12                	jmp    195b <_Z7kmemsetIcEPvS0_T_m+0x40>
    1949:	0f b6 55 e4          	movzbl -0x1c(%rbp),%edx
    194d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1951:	48 8d 48 01          	lea    0x1(%rax),%rcx
    1955:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
    1959:	88 10                	mov    %dl,(%rax)
    195b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    195f:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    1963:	72 e4                	jb     1949 <_Z7kmemsetIcEPvS0_T_m+0x2e>
    1965:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1969:	c9                   	leave
    196a:	c3                   	ret

000000000000196b <_Z7kmemcpyIcEPvS0_PKvm>:
    196b:	55                   	push   %rbp
    196c:	48 89 e5             	mov    %rsp,%rbp
    196f:	48 83 ec 38          	sub    $0x38,%rsp
    1973:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1977:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    197b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    197f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1983:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1987:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    198b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    198f:	48 01 d0             	add    %rdx,%rax
    1992:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1996:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    199a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    199e:	eb 1d                	jmp    19bd <_Z7kmemcpyIcEPvS0_PKvm+0x52>
    19a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19a4:	48 8d 50 01          	lea    0x1(%rax),%rdx
    19a8:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    19ac:	0f b6 10             	movzbl (%rax),%edx
    19af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19b3:	48 8d 48 01          	lea    0x1(%rax),%rcx
    19b7:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
    19bb:	88 10                	mov    %dl,(%rax)
    19bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19c1:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    19c5:	72 d9                	jb     19a0 <_Z7kmemcpyIcEPvS0_PKvm+0x35>
    19c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    19cb:	c9                   	leave
    19cc:	c3                   	ret

00000000000019cd <_ZSt3minIiERKT_S2_S2_>:
    19cd:	55                   	push   %rbp
    19ce:	48 89 e5             	mov    %rsp,%rbp
    19d1:	48 83 ec 10          	sub    $0x10,%rsp
    19d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    19d9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    19dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19e1:	8b 10                	mov    (%rax),%edx
    19e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19e7:	8b 00                	mov    (%rax),%eax
    19e9:	39 c2                	cmp    %eax,%edx
    19eb:	7d 06                	jge    19f3 <_ZSt3minIiERKT_S2_S2_+0x26>
    19ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19f1:	eb 04                	jmp    19f7 <_ZSt3minIiERKT_S2_S2_+0x2a>
    19f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19f7:	c9                   	leave
    19f8:	c3                   	ret

00000000000019f9 <_ZSt3maxIiERKT_S2_S2_>:
    19f9:	55                   	push   %rbp
    19fa:	48 89 e5             	mov    %rsp,%rbp
    19fd:	48 83 ec 10          	sub    $0x10,%rsp
    1a01:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1a05:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1a09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a0d:	8b 10                	mov    (%rax),%edx
    1a0f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1a13:	8b 00                	mov    (%rax),%eax
    1a15:	39 c2                	cmp    %eax,%edx
    1a17:	7e 06                	jle    1a1f <_ZSt3maxIiERKT_S2_S2_+0x26>
    1a19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a1d:	eb 04                	jmp    1a23 <_ZSt3maxIiERKT_S2_S2_+0x2a>
    1a1f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1a23:	c9                   	leave
    1a24:	c3                   	ret

0000000000001a25 <_Z41__static_initialization_and_destruction_0v>:
    1a25:	55                   	push   %rbp
    1a26:	48 89 e5             	mov    %rsp,%rbp
    1a29:	48 8d 05 50 17 00 00 	lea    0x1750(%rip),%rax        # 3180 <msdata>
    1a30:	48 89 c7             	mov    %rax,%rdi
    1a33:	e8 0a f7 ff ff       	call   1142 <_ZN6kinput6MsDataC1Ev>
    1a38:	90                   	nop
    1a39:	5d                   	pop    %rbp
    1a3a:	c3                   	ret

0000000000001a3b <_GLOBAL__sub_I__ZN3CPU10installISRE>:
    1a3b:	55                   	push   %rbp
    1a3c:	48 89 e5             	mov    %rsp,%rbp
    1a3f:	e8 e1 ff ff ff       	call   1a25 <_Z41__static_initialization_and_destruction_0v>
    1a44:	5d                   	pop    %rbp
    1a45:	c3                   	ret






