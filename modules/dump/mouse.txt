-------- readelf -a mouse.elf --------
ELF Header:
  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF64
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              DYN (Position-Independent Executable file)
  Machine:                           Advanced Micro Devices X86-64
  Version:                           0x1
  Entry point address:               0x1000
  Start of program headers:          64 (bytes into file)
  Start of section headers:          16200 (bytes into file)
  Flags:                             0x0
  Size of this header:               64 (bytes)
  Size of program headers:           56 (bytes)
  Number of program headers:         5
  Size of section headers:           64 (bytes)
  Number of section headers:         17
  Section header string table index: 16

Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
  [ 0]                   NULL             0000000000000000  00000000
       0000000000000000  0000000000000000           0     0     0
  [ 1] .text             PROGBITS         0000000000001000  00001000
       0000000000000bc9  0000000000000000  AX       0     0     2
  [ 2] .rodata           PROGBITS         0000000000002000  00002000
       0000000000000016  0000000000000000   A       0     0     2
  [ 3] .eh_frame         PROGBITS         0000000000002018  00002018
       0000000000000334  0000000000000000   A       0     0     8
  [ 4] .interp           PROGBITS         000000000000234c  0000234c
       000000000000000f  0000000000000000   A       0     0     1
  [ 5] .dynsym           DYNSYM           0000000000002360  00002360
       0000000000000018  0000000000000018   A       6     1     8
  [ 6] .dynstr           STRTAB           0000000000002378  00002378
       0000000000000001  0000000000000000   A       0     0     1
  [ 7] .hash             HASH             0000000000002380  00002380
       0000000000000010  0000000000000004   A       5     0     8
  [ 8] .rela.dyn         RELA             0000000000002390  00002390
       00000000000000a8  0000000000000018   A       5     0     8
  [ 9] .data             PROGBITS         0000000000003000  00003000
       0000000000000030  0000000000000000  WA       0     0     8
  [10] .ctors            PROGBITS         0000000000003030  00003030
       0000000000000008  0000000000000000  WA       0     0     8
  [11] .dynamic          DYNAMIC          0000000000003038  00003038
       0000000000000100  0000000000000010  WA       6     0     8
  [12] .bss              NOBITS           0000000000003140  00003138
       0000000000000118  0000000000000000  WA       0     0     16
  [13] .comment          PROGBITS         0000000000000000  00003138
       0000000000000012  0000000000000001  MS       0     0     1
  [14] .symtab           SYMTAB           0000000000000000  00003150
       00000000000007b0  0000000000000018          15    29     8
  [15] .strtab           STRTAB           0000000000000000  00003900
       00000000000005c7  0000000000000000           0     0     1
  [16] .shstrtab         STRTAB           0000000000000000  00003ec7
       000000000000007f  0000000000000000           0     0     1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  D (mbind), l (large), p (processor specific)

There are no section groups in this file.

Program Headers:
  Type           Offset             VirtAddr           PhysAddr
                 FileSiz            MemSiz              Flags  Align
  PHDR           0x0000000000000040 0x0000000000000040 0x0000000000000040
                 0x0000000000000118 0x0000000000000118  R      0x8
  INTERP         0x000000000000234c 0x000000000000234c 0x000000000000234c
                 0x000000000000000f 0x000000000000000f  R      0x1
      [Requesting program interpreter: /lib/ld64.so.1]
  LOAD           0x0000000000000000 0x0000000000000000 0x0000000000000000
                 0x0000000000002438 0x0000000000002438  R E    0x1000
  LOAD           0x0000000000003000 0x0000000000003000 0x0000000000003000
                 0x0000000000000138 0x0000000000000258  RW     0x1000
  DYNAMIC        0x0000000000003038 0x0000000000003038 0x0000000000003038
                 0x0000000000000100 0x0000000000000100  RW     0x8

 Section to Segment mapping:
  Segment Sections...
   00     
   01     .interp 
   02     .text .rodata .eh_frame .interp .dynsym .dynstr .hash .rela.dyn 
   03     .data .ctors .dynamic .bss 
   04     .dynamic 

Dynamic section at offset 0x3038 contains 12 entries:
  Tag        Type                         Name/Value
 0x0000000000000004 (HASH)               0x2380
 0x0000000000000005 (STRTAB)             0x2378
 0x0000000000000006 (SYMTAB)             0x2360
 0x000000000000000a (STRSZ)              1 (bytes)
 0x000000000000000b (SYMENT)             24 (bytes)
 0x0000000000000015 (DEBUG)              0x0
 0x0000000000000007 (RELA)               0x2390
 0x0000000000000008 (RELASZ)             168 (bytes)
 0x0000000000000009 (RELAENT)            24 (bytes)
 0x000000006ffffffb (FLAGS_1)            Flags: PIE
 0x000000006ffffff9 (RELACOUNT)          7
 0x0000000000000000 (NULL)               0x0

Relocation section '.rela.dyn' at offset 0x2390 contains 7 entries:
  Offset          Info           Type           Sym. Value    Sym. Name + Addend
000000003000  000000000008 R_X86_64_RELATIVE                    13b4
000000003008  000000000008 R_X86_64_RELATIVE                    13d2
000000003010  000000000008 R_X86_64_RELATIVE                    13f2
000000003018  000000000008 R_X86_64_RELATIVE                    140f
000000003020  000000000008 R_X86_64_RELATIVE                    142e
000000003028  000000000008 R_X86_64_RELATIVE                    144f
000000003030  000000000008 R_X86_64_RELATIVE                    1bbe
No processor specific unwind information to decode

Symbol table '.dynsym' contains 1 entry:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND 

Symbol table '.symtab' contains 82 entries:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND 
     1: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS mouse.cpp
     2: 0000000000002000     2 OBJECT  LOCAL  DEFAULT    2 _ZN2IOL4COM1E
     3: 0000000000002002     2 OBJECT  LOCAL  DEFAULT    2 _ZN2IOL4COM2E
     4: 0000000000002004     2 OBJECT  LOCAL  DEFAULT    2 _ZN2IOL4COM3E
     5: 0000000000002006     2 OBJECT  LOCAL  DEFAULT    2 _ZN2IOL4COM4E
     6: 0000000000002008     2 OBJECT  LOCAL  DEFAULT    2 _ZN2IOL4COM5E
     7: 000000000000200a     2 OBJECT  LOCAL  DEFAULT    2 _ZN2IOL4COM6E
     8: 000000000000200c     2 OBJECT  LOCAL  DEFAULT    2 _ZN2IOL4COM7E
     9: 000000000000200e     2 OBJECT  LOCAL  DEFAULT    2 _ZN2IOL4COM8E
    10: 0000000000003000     8 OBJECT  LOCAL  DEFAULT    9 _ZN2IOL3in8E
    11: 0000000000003008     8 OBJECT  LOCAL  DEFAULT    9 _ZN2IOL4in16E
    12: 0000000000003010     8 OBJECT  LOCAL  DEFAULT    9 _ZN2IOL4in32E
    13: 0000000000003018     8 OBJECT  LOCAL  DEFAULT    9 _ZN2IOL4out8E
    14: 0000000000003020     8 OBJECT  LOCAL  DEFAULT    9 _ZN2IOL5out16E
    15: 0000000000003028     8 OBJECT  LOCAL  DEFAULT    9 _ZN2IOL5out32E
    16: 0000000000003190    16 OBJECT  LOCAL  DEFAULT   12 _ZL6msdata
    17: 00000000000031a0     1 OBJECT  LOCAL  DEFAULT   12 _ZL10MouseCycle
    18: 00000000000031a1     4 OBJECT  LOCAL  DEFAULT   12 _ZL11MousePacket
    19: 00000000000031a5     1 OBJECT  LOCAL  DEFAULT   12 _ZL16MousePacketReady
    20: 00000000000014b1    57 FUNC    LOCAL  DEFAULT    1 _ZL10MouseWriteh
    21: 000000000000173a   139 FUNC    LOCAL  DEFAULT    1 _ZL10mouse_initv
    22: 00000000000017c5   202 FUNC    LOCAL  DEFAULT    1 _ZL11irq_handler[...]
    23: 000000000000188f   333 FUNC    LOCAL  DEFAULT    1 _ZL11driver_mainPv
    24: 00000000000019dc    62 FUNC    LOCAL  DEFAULT    1 _ZL11driver_readPvm
    25: 0000000000001b87    55 FUNC    LOCAL  DEFAULT    1 _Z41__static_ini[...]
    26: 0000000000001bbe    11 FUNC    LOCAL  DEFAULT    1 _GLOBAL__sub_I__[...]
    27: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS 
    28: 0000000000003038     0 OBJECT  LOCAL  DEFAULT   11 _DYNAMIC
    29: 0000000000003150     8 OBJECT  GLOBAL DEFAULT   12 _ZN6kvideo11clea[...]
    30: 0000000000003218     8 OBJECT  WEAK   DEFAULT   12 _ZN6kvideo10back[...]
    31: 0000000000003238     8 OBJECT  WEAK   DEFAULT   12 _ZSt7realloc
    32: 0000000000003158     8 OBJECT  GLOBAL DEFAULT   12 _ZN6kvideo9fillColorE
    33: 00000000000031d0     8 OBJECT  WEAK   DEFAULT   12 _ZN6kinput16writ[...]
    34: 0000000000003178     8 OBJECT  GLOBAL DEFAULT   12 _ZN6kvideo12rend[...]
    35: 0000000000003248     8 OBJECT  WEAK   DEFAULT   12 _ZSt5clock
    36: 00000000000031e0     8 OBJECT  WEAK   DEFAULT   12 _ZN7kthread5yieldE
    37: 0000000000001a1a    40 FUNC    WEAK   DEFAULT    1 _ZN3vecILm2EiEC2Eii
    38: 00000000000031f8     8 OBJECT  WEAK   DEFAULT   12 _ZN7kthread10thi[...]
    39: 0000000000003180     8 OBJECT  GLOBAL DEFAULT   12 _ZN6kvideo12curs[...]
    40: 0000000000003200     8 OBJECT  WEAK   DEFAULT   12 _ZN6kvideo3CSRE
    41: 00000000000013b4    30 FUNC    WEAK   DEFAULT    1 _ZN2IO3inbEt
    42: 0000000000001a7d    80 FUNC    WEAK   DEFAULT    1 _Z7kmemsetIcEPvS0_T_m
    43: 0000000000001142    93 FUNC    WEAK   DEFAULT    1 _ZN6kinput6MsDat[...]
    44: 0000000000003250     8 OBJECT  WEAK   DEFAULT   12 _ZSt5fopen
    45: 000000000000320c     4 OBJECT  WEAK   DEFAULT   12 _ZN6kvideo1HE
    46: 000000000000140f    31 FUNC    WEAK   DEFAULT    1 _ZN2IO4outbEth
    47: 00000000000031b0     8 OBJECT  WEAK   DEFAULT   12 _ZN3knl3hcfE
    48: 0000000000003240     8 OBJECT  WEAK   DEFAULT   12 _ZSt4free
    49: 0000000000003140     8 OBJECT  GLOBAL DEFAULT   12 _ZN3CPU10installISRE
    50: 000000000000119f   533 FUNC    WEAK   DEFAULT    1 _ZN4ksym7loadsym[...]
    51: 0000000000003228     8 OBJECT  WEAK   DEFAULT   12 _ZSt6printf
    52: 0000000000003168     8 OBJECT  GLOBAL DEFAULT   12 _ZN6kvideo4rectE
    53: 000000000000146b    70 FUNC    GLOBAL DEFAULT    1 _Z9MouseWaitv
    54: 0000000000003148     8 OBJECT  GLOBAL DEFAULT   12 _ZN3CPU10installIRQE
    55: 0000000000003210     8 OBJECT  WEAK   DEFAULT   12 _ZN6kvideo11fron[...]
    56: 00000000000031f0     8 OBJECT  WEAK   DEFAULT   12 _ZN7kthread4exitE
    57: 0000000000001000   321 FUNC    GLOBAL DEFAULT    1 init
    58: 00000000000031c8     8 OBJECT  WEAK   DEFAULT   12 _ZN6kinput10read[...]
    59: 000000000000142e    33 FUNC    WEAK   DEFAULT    1 _ZN2IO4outwEtt
    60: 0000000000003160     8 OBJECT  GLOBAL DEFAULT   12 _ZN6kvideo10fill[...]
    61: 0000000000001b5b    44 FUNC    WEAK   DEFAULT    1 _ZSt3maxIiERKT_S2_S2_
    62: 0000000000003170     8 OBJECT  GLOBAL DEFAULT   12 _ZN6kvideo4blitE
    63: 00000000000031a8     8 OBJECT  WEAK   DEFAULT   12 _ZN3knl5panicE
    64: 0000000000003220     8 OBJECT  WEAK   DEFAULT   12 _ZSt6assert
    65: 00000000000031c0     8 OBJECT  WEAK   DEFAULT   12 _ZN6kinput11writ[...]
    66: 00000000000013f2    29 FUNC    WEAK   DEFAULT    1 _ZN2IO3inlEt
    67: 0000000000003188     8 OBJECT  GLOBAL DEFAULT   12 _ZN6kvideo11swap[...]
    68: 00000000000031b8     8 OBJECT  WEAK   DEFAULT   12 _ZN3knl10findModuleE
    69: 0000000000001142    93 FUNC    WEAK   DEFAULT    1 _ZN6kinput6MsDat[...]
    70: 00000000000031d8     8 OBJECT  WEAK   DEFAULT   12 _ZN6kinput15read[...]
    71: 00000000000014ea    21 FUNC    GLOBAL DEFAULT    1 _Z9MouseReadv
    72: 0000000000001acd    98 FUNC    WEAK   DEFAULT    1 _Z7kmemcpyIcEPvS[...]
    73: 0000000000003230     8 OBJECT  WEAK   DEFAULT   12 _ZSt6malloc
    74: 0000000000001b2f    44 FUNC    WEAK   DEFAULT    1 _ZSt3minIiERKT_S2_S2_
    75: 0000000000001a1a    40 FUNC    WEAK   DEFAULT    1 _ZN3vecILm2EiEC1Eii
    76: 00000000000014ff   571 FUNC    GLOBAL DEFAULT    1 _Z18ProcessMouse[...]
    77: 0000000000001a42    59 FUNC    WEAK   DEFAULT    1 _ZSt5clampIiERKT[...]
    78: 00000000000013d2    32 FUNC    WEAK   DEFAULT    1 _ZN2IO3inwEt
    79: 000000000000144f    28 FUNC    WEAK   DEFAULT    1 _ZN2IO4outlEtj
    80: 00000000000031e8     8 OBJECT  WEAK   DEFAULT   12 _ZN7kthread5sleepE
    81: 0000000000003208     4 OBJECT  WEAK   DEFAULT   12 _ZN6kvideo1WE

Histogram for bucket list length (total of 1 bucket):
 Length  Number     % of total  Coverage
      0  1          (100.0%)

No version information found in this file.






-------- objdump -s mouse.elf --------

../sysroot/drv/mouse.elf:     file format elf64-x86-64


Disassembly of section .text:

0000000000001000 <init>:
    1000:	55                   	push   %rbp
    1001:	48 89 e5             	mov    %rsp,%rbp
    1004:	48 83 ec 20          	sub    $0x20,%rsp
    1008:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    100c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1010:	48 89 c7             	mov    %rax,%rdi
    1013:	e8 87 01 00 00       	call   119f <_ZN4ksym7loadsymEPNS_6ksym_tE>
    1018:	48 8b 05 11 22 00 00 	mov    0x2211(%rip),%rax        # 3230 <_ZSt6malloc>
    101f:	bf 68 00 00 00       	mov    $0x68,%edi
    1024:	ff d0                	call   *%rax
    1026:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    102a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    102e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    1035:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1039:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    1040:	00 
    1041:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1045:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    104c:	00 
    104d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1051:	48 c7 40 18 01 00 00 	movq   $0x1,0x18(%rax)
    1058:	00 
    1059:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    105d:	48 c7 40 20 05 00 00 	movq   $0x5,0x20(%rax)
    1064:	00 
    1065:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1069:	c6 40 28 00          	movb   $0x0,0x28(%rax)
    106d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1071:	c6 40 29 00          	movb   $0x0,0x29(%rax)
    1075:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1079:	c6 40 2a 00          	movb   $0x0,0x2a(%rax)
    107d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1081:	c6 40 2b 00          	movb   $0x0,0x2b(%rax)
    1085:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1089:	c6 40 2c 00          	movb   $0x0,0x2c(%rax)
    108d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1091:	c6 40 2d 00          	movb   $0x0,0x2d(%rax)
    1095:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1099:	c6 40 2e 00          	movb   $0x0,0x2e(%rax)
    109d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10a1:	c6 40 2f 00          	movb   $0x0,0x2f(%rax)
    10a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10a9:	48 8d 15 df 07 00 00 	lea    0x7df(%rip),%rdx        # 188f <_ZL11driver_mainPv>
    10b0:	48 89 50 30          	mov    %rdx,0x30(%rax)
    10b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10b8:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
    10bf:	00 
    10c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10c4:	48 c7 40 40 00 00 00 	movq   $0x0,0x40(%rax)
    10cb:	00 
    10cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10d0:	48 8d 15 05 09 00 00 	lea    0x905(%rip),%rdx        # 19dc <_ZL11driver_readPvm>
    10d7:	48 89 50 48          	mov    %rdx,0x48(%rax)
    10db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10df:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    10e6:	00 
    10e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10eb:	48 c7 40 58 0c 00 00 	movq   $0xc,0x58(%rax)
    10f2:	00 
    10f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10f7:	48 8d 15 c7 06 00 00 	lea    0x6c7(%rip),%rdx        # 17c5 <_ZL11irq_handlerP10intframe_t>
    10fe:	48 89 50 60          	mov    %rdx,0x60(%rax)
    1102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1106:	48 83 c0 28          	add    $0x28,%rax
    110a:	ba 08 00 00 00       	mov    $0x8,%edx
    110f:	be 00 00 00 00       	mov    $0x0,%esi
    1114:	48 89 c7             	mov    %rax,%rdi
    1117:	e8 61 09 00 00       	call   1a7d <_Z7kmemsetIcEPvS0_T_m>
    111c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1120:	48 83 c0 28          	add    $0x28,%rax
    1124:	ba 05 00 00 00       	mov    $0x5,%edx
    1129:	48 8d 0d e0 0e 00 00 	lea    0xee0(%rip),%rcx        # 2010 <_ZN2IOL4COM8E+0x2>
    1130:	48 89 ce             	mov    %rcx,%rsi
    1133:	48 89 c7             	mov    %rax,%rdi
    1136:	e8 92 09 00 00       	call   1acd <_Z7kmemcpyIcEPvS0_PKvm>
    113b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    113f:	c9                   	leave
    1140:	c3                   	ret
    1141:	90                   	nop

0000000000001142 <_ZN6kinput6MsDataC1ERK3vecILm2EiE>:
    1142:	55                   	push   %rbp
    1143:	48 89 e5             	mov    %rsp,%rbp
    1146:	48 83 ec 10          	sub    $0x10,%rsp
    114a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    114e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1152:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1156:	8b 10                	mov    (%rax),%edx
    1158:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    115c:	89 10                	mov    %edx,(%rax)
    115e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1162:	8b 50 04             	mov    0x4(%rax),%edx
    1165:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1169:	89 50 04             	mov    %edx,0x4(%rax)
    116c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1170:	c6 40 08 00          	movb   $0x0,0x8(%rax)
    1174:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1178:	c6 40 09 00          	movb   $0x0,0x9(%rax)
    117c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1180:	c6 40 0a 00          	movb   $0x0,0xa(%rax)
    1184:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1188:	c6 40 0b 00          	movb   $0x0,0xb(%rax)
    118c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1190:	c6 40 0c 00          	movb   $0x0,0xc(%rax)
    1194:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1198:	c6 40 0d 00          	movb   $0x0,0xd(%rax)
    119c:	90                   	nop
    119d:	c9                   	leave
    119e:	c3                   	ret

000000000000119f <_ZN4ksym7loadsymEPNS_6ksym_tE>:
    119f:	55                   	push   %rbp
    11a0:	48 89 e5             	mov    %rsp,%rbp
    11a3:	48 83 ec 38          	sub    $0x38,%rsp
    11a7:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    11ab:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    11af:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    11b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    11b7:	48 8b 00             	mov    (%rax),%rax
    11ba:	48 89 05 5f 20 00 00 	mov    %rax,0x205f(%rip)        # 3220 <_ZSt6assert>
    11c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    11c5:	48 8b 40 08          	mov    0x8(%rax),%rax
    11c9:	48 89 05 58 20 00 00 	mov    %rax,0x2058(%rip)        # 3228 <_ZSt6printf>
    11d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    11d4:	48 8b 40 10          	mov    0x10(%rax),%rax
    11d8:	48 89 05 51 20 00 00 	mov    %rax,0x2051(%rip)        # 3230 <_ZSt6malloc>
    11df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    11e3:	48 8b 40 18          	mov    0x18(%rax),%rax
    11e7:	48 89 05 4a 20 00 00 	mov    %rax,0x204a(%rip)        # 3238 <_ZSt7realloc>
    11ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    11f2:	48 8b 40 20          	mov    0x20(%rax),%rax
    11f6:	48 89 05 43 20 00 00 	mov    %rax,0x2043(%rip)        # 3240 <_ZSt4free>
    11fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1201:	48 8b 40 28          	mov    0x28(%rax),%rax
    1205:	48 89 05 3c 20 00 00 	mov    %rax,0x203c(%rip)        # 3248 <_ZSt5clock>
    120c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1210:	48 8b 40 30          	mov    0x30(%rax),%rax
    1214:	48 89 05 35 20 00 00 	mov    %rax,0x2035(%rip)        # 3250 <_ZSt5fopen>
    121b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    121f:	48 83 c0 38          	add    $0x38,%rax
    1223:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1227:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    122b:	48 8b 00             	mov    (%rax),%rax
    122e:	48 89 05 cb 1f 00 00 	mov    %rax,0x1fcb(%rip)        # 3200 <_ZN6kvideo3CSRE>
    1235:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1239:	8b 40 08             	mov    0x8(%rax),%eax
    123c:	89 05 c6 1f 00 00    	mov    %eax,0x1fc6(%rip)        # 3208 <_ZN6kvideo1WE>
    1242:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1246:	8b 40 0c             	mov    0xc(%rax),%eax
    1249:	89 05 bd 1f 00 00    	mov    %eax,0x1fbd(%rip)        # 320c <_ZN6kvideo1HE>
    124f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1253:	48 8b 40 10          	mov    0x10(%rax),%rax
    1257:	48 89 05 b2 1f 00 00 	mov    %rax,0x1fb2(%rip)        # 3210 <_ZN6kvideo11frontbufferE>
    125e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1262:	48 8b 40 18          	mov    0x18(%rax),%rax
    1266:	48 89 05 ab 1f 00 00 	mov    %rax,0x1fab(%rip)        # 3218 <_ZN6kvideo10backbufferE>
    126d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1271:	48 8b 40 20          	mov    0x20(%rax),%rax
    1275:	48 89 05 d4 1e 00 00 	mov    %rax,0x1ed4(%rip)        # 3150 <_ZN6kvideo11clearBufferE>
    127c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1280:	48 8b 40 28          	mov    0x28(%rax),%rax
    1284:	48 89 05 cd 1e 00 00 	mov    %rax,0x1ecd(%rip)        # 3158 <_ZN6kvideo9fillColorE>
    128b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    128f:	48 8b 40 30          	mov    0x30(%rax),%rax
    1293:	48 89 05 c6 1e 00 00 	mov    %rax,0x1ec6(%rip)        # 3160 <_ZN6kvideo10fillBufferE>
    129a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    129e:	48 8b 40 38          	mov    0x38(%rax),%rax
    12a2:	48 89 05 bf 1e 00 00 	mov    %rax,0x1ebf(%rip)        # 3168 <_ZN6kvideo4rectE>
    12a9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    12ad:	48 8b 40 40          	mov    0x40(%rax),%rax
    12b1:	48 89 05 b8 1e 00 00 	mov    %rax,0x1eb8(%rip)        # 3170 <_ZN6kvideo4blitE>
    12b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    12bc:	48 8b 40 48          	mov    0x48(%rax),%rax
    12c0:	48 89 05 b1 1e 00 00 	mov    %rax,0x1eb1(%rip)        # 3178 <_ZN6kvideo12renderStringE>
    12c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    12cb:	48 8b 40 50          	mov    0x50(%rax),%rax
    12cf:	48 89 05 aa 1e 00 00 	mov    %rax,0x1eaa(%rip)        # 3180 <_ZN6kvideo12cursorStringE>
    12d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    12da:	48 8b 40 58          	mov    0x58(%rax),%rax
    12de:	48 89 05 a3 1e 00 00 	mov    %rax,0x1ea3(%rip)        # 3188 <_ZN6kvideo11swapBuffersE>
    12e5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    12e9:	48 05 98 00 00 00    	add    $0x98,%rax
    12ef:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    12f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    12f7:	48 8b 00             	mov    (%rax),%rax
    12fa:	48 89 05 df 1e 00 00 	mov    %rax,0x1edf(%rip)        # 31e0 <_ZN7kthread5yieldE>
    1301:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1305:	48 8b 40 08          	mov    0x8(%rax),%rax
    1309:	48 89 05 d8 1e 00 00 	mov    %rax,0x1ed8(%rip)        # 31e8 <_ZN7kthread5sleepE>
    1310:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1314:	48 8b 40 10          	mov    0x10(%rax),%rax
    1318:	48 89 05 d1 1e 00 00 	mov    %rax,0x1ed1(%rip)        # 31f0 <_ZN7kthread4exitE>
    131f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1323:	48 8b 40 18          	mov    0x18(%rax),%rax
    1327:	48 89 05 ca 1e 00 00 	mov    %rax,0x1eca(%rip)        # 31f8 <_ZN7kthread10this_cpuidE>
    132e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1332:	48 05 b8 00 00 00    	add    $0xb8,%rax
    1338:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    133c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1340:	48 8b 00             	mov    (%rax),%rax
    1343:	48 89 05 76 1e 00 00 	mov    %rax,0x1e76(%rip)        # 31c0 <_ZN6kinput11writeMsDataE>
    134a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    134e:	48 8b 40 08          	mov    0x8(%rax),%rax
    1352:	48 89 05 6f 1e 00 00 	mov    %rax,0x1e6f(%rip)        # 31c8 <_ZN6kinput10readMsDataE>
    1359:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    135d:	48 8b 40 10          	mov    0x10(%rax),%rax
    1361:	48 89 05 68 1e 00 00 	mov    %rax,0x1e68(%rip)        # 31d0 <_ZN6kinput16writeMsCallbacksE>
    1368:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    136c:	48 8b 40 18          	mov    0x18(%rax),%rax
    1370:	48 89 05 61 1e 00 00 	mov    %rax,0x1e61(%rip)        # 31d8 <_ZN6kinput15readMsCallbacksE>
    1377:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    137b:	48 05 d8 00 00 00    	add    $0xd8,%rax
    1381:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1385:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1389:	48 8b 00             	mov    (%rax),%rax
    138c:	48 89 05 15 1e 00 00 	mov    %rax,0x1e15(%rip)        # 31a8 <_ZN3knl5panicE>
    1393:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1397:	48 8b 40 08          	mov    0x8(%rax),%rax
    139b:	48 89 05 0e 1e 00 00 	mov    %rax,0x1e0e(%rip)        # 31b0 <_ZN3knl3hcfE>
    13a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    13a6:	48 8b 40 10          	mov    0x10(%rax),%rax
    13aa:	48 89 05 07 1e 00 00 	mov    %rax,0x1e07(%rip)        # 31b8 <_ZN3knl10findModuleE>
    13b1:	90                   	nop
    13b2:	c9                   	leave
    13b3:	c3                   	ret

00000000000013b4 <_ZN2IO3inbEt>:
    13b4:	55                   	push   %rbp
    13b5:	48 89 e5             	mov    %rsp,%rbp
    13b8:	48 83 ec 18          	sub    $0x18,%rsp
    13bc:	89 f8                	mov    %edi,%eax
    13be:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
    13c2:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax
    13c6:	89 c2                	mov    %eax,%edx
    13c8:	ec                   	in     (%dx),%al
    13c9:	88 45 ff             	mov    %al,-0x1(%rbp)
    13cc:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    13d0:	c9                   	leave
    13d1:	c3                   	ret

00000000000013d2 <_ZN2IO3inwEt>:
    13d2:	55                   	push   %rbp
    13d3:	48 89 e5             	mov    %rsp,%rbp
    13d6:	48 83 ec 18          	sub    $0x18,%rsp
    13da:	89 f8                	mov    %edi,%eax
    13dc:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
    13e0:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax
    13e4:	89 c2                	mov    %eax,%edx
    13e6:	66 ed                	in     (%dx),%ax
    13e8:	66 89 45 fe          	mov    %ax,-0x2(%rbp)
    13ec:	0f b7 45 fe          	movzwl -0x2(%rbp),%eax
    13f0:	c9                   	leave
    13f1:	c3                   	ret

00000000000013f2 <_ZN2IO3inlEt>:
    13f2:	55                   	push   %rbp
    13f3:	48 89 e5             	mov    %rsp,%rbp
    13f6:	48 83 ec 18          	sub    $0x18,%rsp
    13fa:	89 f8                	mov    %edi,%eax
    13fc:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
    1400:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax
    1404:	89 c2                	mov    %eax,%edx
    1406:	ed                   	in     (%dx),%eax
    1407:	89 45 fc             	mov    %eax,-0x4(%rbp)
    140a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    140d:	c9                   	leave
    140e:	c3                   	ret

000000000000140f <_ZN2IO4outbEth>:
    140f:	55                   	push   %rbp
    1410:	48 89 e5             	mov    %rsp,%rbp
    1413:	48 83 ec 08          	sub    $0x8,%rsp
    1417:	89 fa                	mov    %edi,%edx
    1419:	89 f0                	mov    %esi,%eax
    141b:	66 89 55 fc          	mov    %dx,-0x4(%rbp)
    141f:	88 45 f8             	mov    %al,-0x8(%rbp)
    1422:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax
    1426:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx
    142a:	ee                   	out    %al,(%dx)
    142b:	90                   	nop
    142c:	c9                   	leave
    142d:	c3                   	ret

000000000000142e <_ZN2IO4outwEtt>:
    142e:	55                   	push   %rbp
    142f:	48 89 e5             	mov    %rsp,%rbp
    1432:	48 83 ec 08          	sub    $0x8,%rsp
    1436:	89 fa                	mov    %edi,%edx
    1438:	89 f0                	mov    %esi,%eax
    143a:	66 89 55 fc          	mov    %dx,-0x4(%rbp)
    143e:	66 89 45 f8          	mov    %ax,-0x8(%rbp)
    1442:	0f b7 45 f8          	movzwl -0x8(%rbp),%eax
    1446:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx
    144a:	66 ef                	out    %ax,(%dx)
    144c:	90                   	nop
    144d:	c9                   	leave
    144e:	c3                   	ret

000000000000144f <_ZN2IO4outlEtj>:
    144f:	55                   	push   %rbp
    1450:	48 89 e5             	mov    %rsp,%rbp
    1453:	48 83 ec 08          	sub    $0x8,%rsp
    1457:	89 f8                	mov    %edi,%eax
    1459:	89 75 f8             	mov    %esi,-0x8(%rbp)
    145c:	66 89 45 fc          	mov    %ax,-0x4(%rbp)
    1460:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1463:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx
    1467:	ef                   	out    %eax,(%dx)
    1468:	90                   	nop
    1469:	c9                   	leave
    146a:	c3                   	ret

000000000000146b <_Z9MouseWaitv>:
    146b:	55                   	push   %rbp
    146c:	48 89 e5             	mov    %rsp,%rbp
    146f:	48 83 ec 10          	sub    $0x10,%rsp
    1473:	48 c7 45 f8 a0 86 01 	movq   $0x186a0,-0x8(%rbp)
    147a:	00 
    147b:	eb 19                	jmp    1496 <_Z9MouseWaitv+0x2b>
    147d:	bf 64 00 00 00       	mov    $0x64,%edi
    1482:	e8 2d ff ff ff       	call   13b4 <_ZN2IO3inbEt>
    1487:	0f b6 c0             	movzbl %al,%eax
    148a:	83 e0 02             	and    $0x2,%eax
    148d:	85 c0                	test   %eax,%eax
    148f:	0f 94 c0             	sete   %al
    1492:	84 c0                	test   %al,%al
    1494:	75 18                	jne    14ae <_Z9MouseWaitv+0x43>
    1496:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    149a:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    149e:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    14a2:	48 85 c0             	test   %rax,%rax
    14a5:	0f 95 c0             	setne  %al
    14a8:	84 c0                	test   %al,%al
    14aa:	75 d1                	jne    147d <_Z9MouseWaitv+0x12>
    14ac:	eb 01                	jmp    14af <_Z9MouseWaitv+0x44>
    14ae:	90                   	nop
    14af:	c9                   	leave
    14b0:	c3                   	ret

00000000000014b1 <_ZL10MouseWriteh>:
    14b1:	55                   	push   %rbp
    14b2:	48 89 e5             	mov    %rsp,%rbp
    14b5:	48 83 ec 10          	sub    $0x10,%rsp
    14b9:	89 f8                	mov    %edi,%eax
    14bb:	88 45 fc             	mov    %al,-0x4(%rbp)
    14be:	e8 a8 ff ff ff       	call   146b <_Z9MouseWaitv>
    14c3:	be d4 00 00 00       	mov    $0xd4,%esi
    14c8:	bf 64 00 00 00       	mov    $0x64,%edi
    14cd:	e8 3d ff ff ff       	call   140f <_ZN2IO4outbEth>
    14d2:	e8 94 ff ff ff       	call   146b <_Z9MouseWaitv>
    14d7:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
    14db:	89 c6                	mov    %eax,%esi
    14dd:	bf 60 00 00 00       	mov    $0x60,%edi
    14e2:	e8 28 ff ff ff       	call   140f <_ZN2IO4outbEth>
    14e7:	90                   	nop
    14e8:	c9                   	leave
    14e9:	c3                   	ret

00000000000014ea <_Z9MouseReadv>:
    14ea:	55                   	push   %rbp
    14eb:	48 89 e5             	mov    %rsp,%rbp
    14ee:	e8 78 ff ff ff       	call   146b <_Z9MouseWaitv>
    14f3:	bf 60 00 00 00       	mov    $0x60,%edi
    14f8:	e8 b7 fe ff ff       	call   13b4 <_ZN2IO3inbEt>
    14fd:	5d                   	pop    %rbp
    14fe:	c3                   	ret

00000000000014ff <_Z18ProcessMousePacketv>:
    14ff:	55                   	push   %rbp
    1500:	48 89 e5             	mov    %rsp,%rbp
    1503:	48 83 ec 20          	sub    $0x20,%rsp
    1507:	0f b6 05 97 1c 00 00 	movzbl 0x1c97(%rip),%eax        # 31a5 <_ZL16MousePacketReady>
    150e:	83 f0 01             	xor    $0x1,%eax
    1511:	84 c0                	test   %al,%al
    1513:	74 0a                	je     151f <_Z18ProcessMousePacketv+0x20>
    1515:	b8 00 00 00 00       	mov    $0x0,%eax
    151a:	e9 19 02 00 00       	jmp    1738 <_Z18ProcessMousePacketv+0x239>
    151f:	0f b7 05 75 1c 00 00 	movzwl 0x1c75(%rip),%eax        # 319b <_ZL6msdata+0xb>
    1526:	66 89 05 6b 1c 00 00 	mov    %ax,0x1c6b(%rip)        # 3198 <_ZL6msdata+0x8>
    152d:	0f b6 05 69 1c 00 00 	movzbl 0x1c69(%rip),%eax        # 319d <_ZL6msdata+0xd>
    1534:	88 05 60 1c 00 00    	mov    %al,0x1c60(%rip)        # 319a <_ZL6msdata+0xa>
    153a:	0f b6 05 60 1c 00 00 	movzbl 0x1c60(%rip),%eax        # 31a1 <_ZL11MousePacket>
    1541:	0f b6 c0             	movzbl %al,%eax
    1544:	83 e0 01             	and    $0x1,%eax
    1547:	85 c0                	test   %eax,%eax
    1549:	0f 95 c0             	setne  %al
    154c:	88 05 49 1c 00 00    	mov    %al,0x1c49(%rip)        # 319b <_ZL6msdata+0xb>
    1552:	0f b6 05 48 1c 00 00 	movzbl 0x1c48(%rip),%eax        # 31a1 <_ZL11MousePacket>
    1559:	0f b6 c0             	movzbl %al,%eax
    155c:	83 e0 04             	and    $0x4,%eax
    155f:	85 c0                	test   %eax,%eax
    1561:	0f 95 c0             	setne  %al
    1564:	88 05 32 1c 00 00    	mov    %al,0x1c32(%rip)        # 319c <_ZL6msdata+0xc>
    156a:	0f b6 05 30 1c 00 00 	movzbl 0x1c30(%rip),%eax        # 31a1 <_ZL11MousePacket>
    1571:	0f b6 c0             	movzbl %al,%eax
    1574:	83 e0 02             	and    $0x2,%eax
    1577:	85 c0                	test   %eax,%eax
    1579:	0f 95 c0             	setne  %al
    157c:	88 05 1b 1c 00 00    	mov    %al,0x1c1b(%rip)        # 319d <_ZL6msdata+0xd>
    1582:	0f b6 05 18 1c 00 00 	movzbl 0x1c18(%rip),%eax        # 31a1 <_ZL11MousePacket>
    1589:	0f b6 c0             	movzbl %al,%eax
    158c:	83 e0 10             	and    $0x10,%eax
    158f:	85 c0                	test   %eax,%eax
    1591:	0f 95 c0             	setne  %al
    1594:	88 45 ff             	mov    %al,-0x1(%rbp)
    1597:	0f b6 05 03 1c 00 00 	movzbl 0x1c03(%rip),%eax        # 31a1 <_ZL11MousePacket>
    159e:	0f b6 c0             	movzbl %al,%eax
    15a1:	83 e0 20             	and    $0x20,%eax
    15a4:	85 c0                	test   %eax,%eax
    15a6:	0f 95 c0             	setne  %al
    15a9:	88 45 fe             	mov    %al,-0x2(%rbp)
    15ac:	0f b6 05 ee 1b 00 00 	movzbl 0x1bee(%rip),%eax        # 31a1 <_ZL11MousePacket>
    15b3:	0f b6 c0             	movzbl %al,%eax
    15b6:	83 e0 40             	and    $0x40,%eax
    15b9:	85 c0                	test   %eax,%eax
    15bb:	0f 95 c0             	setne  %al
    15be:	88 45 fd             	mov    %al,-0x3(%rbp)
    15c1:	0f b6 05 d9 1b 00 00 	movzbl 0x1bd9(%rip),%eax        # 31a1 <_ZL11MousePacket>
    15c8:	c0 e8 07             	shr    $0x7,%al
    15cb:	88 45 fc             	mov    %al,-0x4(%rbp)
    15ce:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    15d2:	83 f0 01             	xor    $0x1,%eax
    15d5:	84 c0                	test   %al,%al
    15d7:	74 31                	je     160a <_Z18ProcessMousePacketv+0x10b>
    15d9:	8b 15 b1 1b 00 00    	mov    0x1bb1(%rip),%edx        # 3190 <_ZL6msdata>
    15df:	0f b6 05 bc 1b 00 00 	movzbl 0x1bbc(%rip),%eax        # 31a2 <_ZL11MousePacket+0x1>
    15e6:	0f b6 c0             	movzbl %al,%eax
    15e9:	01 d0                	add    %edx,%eax
    15eb:	89 05 9f 1b 00 00    	mov    %eax,0x1b9f(%rip)        # 3190 <_ZL6msdata>
    15f1:	80 7d fd 00          	cmpb   $0x0,-0x3(%rbp)
    15f5:	74 51                	je     1648 <_Z18ProcessMousePacketv+0x149>
    15f7:	8b 05 93 1b 00 00    	mov    0x1b93(%rip),%eax        # 3190 <_ZL6msdata>
    15fd:	05 ff 00 00 00       	add    $0xff,%eax
    1602:	89 05 88 1b 00 00    	mov    %eax,0x1b88(%rip)        # 3190 <_ZL6msdata>
    1608:	eb 3e                	jmp    1648 <_Z18ProcessMousePacketv+0x149>
    160a:	0f b6 05 91 1b 00 00 	movzbl 0x1b91(%rip),%eax        # 31a2 <_ZL11MousePacket+0x1>
    1611:	f7 d8                	neg    %eax
    1613:	88 05 89 1b 00 00    	mov    %al,0x1b89(%rip)        # 31a2 <_ZL11MousePacket+0x1>
    1619:	8b 15 71 1b 00 00    	mov    0x1b71(%rip),%edx        # 3190 <_ZL6msdata>
    161f:	0f b6 05 7c 1b 00 00 	movzbl 0x1b7c(%rip),%eax        # 31a2 <_ZL11MousePacket+0x1>
    1626:	0f b6 c0             	movzbl %al,%eax
    1629:	29 c2                	sub    %eax,%edx
    162b:	89 15 5f 1b 00 00    	mov    %edx,0x1b5f(%rip)        # 3190 <_ZL6msdata>
    1631:	80 7d fd 00          	cmpb   $0x0,-0x3(%rbp)
    1635:	74 11                	je     1648 <_Z18ProcessMousePacketv+0x149>
    1637:	8b 05 53 1b 00 00    	mov    0x1b53(%rip),%eax        # 3190 <_ZL6msdata>
    163d:	2d ff 00 00 00       	sub    $0xff,%eax
    1642:	89 05 48 1b 00 00    	mov    %eax,0x1b48(%rip)        # 3190 <_ZL6msdata>
    1648:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
    164c:	83 f0 01             	xor    $0x1,%eax
    164f:	84 c0                	test   %al,%al
    1651:	74 31                	je     1684 <_Z18ProcessMousePacketv+0x185>
    1653:	8b 15 3b 1b 00 00    	mov    0x1b3b(%rip),%edx        # 3194 <_ZL6msdata+0x4>
    1659:	0f b6 05 43 1b 00 00 	movzbl 0x1b43(%rip),%eax        # 31a3 <_ZL11MousePacket+0x2>
    1660:	0f b6 c0             	movzbl %al,%eax
    1663:	29 c2                	sub    %eax,%edx
    1665:	89 15 29 1b 00 00    	mov    %edx,0x1b29(%rip)        # 3194 <_ZL6msdata+0x4>
    166b:	80 7d fc 00          	cmpb   $0x0,-0x4(%rbp)
    166f:	74 51                	je     16c2 <_Z18ProcessMousePacketv+0x1c3>
    1671:	8b 05 1d 1b 00 00    	mov    0x1b1d(%rip),%eax        # 3194 <_ZL6msdata+0x4>
    1677:	2d ff 00 00 00       	sub    $0xff,%eax
    167c:	89 05 12 1b 00 00    	mov    %eax,0x1b12(%rip)        # 3194 <_ZL6msdata+0x4>
    1682:	eb 3e                	jmp    16c2 <_Z18ProcessMousePacketv+0x1c3>
    1684:	0f b6 05 18 1b 00 00 	movzbl 0x1b18(%rip),%eax        # 31a3 <_ZL11MousePacket+0x2>
    168b:	f7 d8                	neg    %eax
    168d:	88 05 10 1b 00 00    	mov    %al,0x1b10(%rip)        # 31a3 <_ZL11MousePacket+0x2>
    1693:	8b 15 fb 1a 00 00    	mov    0x1afb(%rip),%edx        # 3194 <_ZL6msdata+0x4>
    1699:	0f b6 05 03 1b 00 00 	movzbl 0x1b03(%rip),%eax        # 31a3 <_ZL11MousePacket+0x2>
    16a0:	0f b6 c0             	movzbl %al,%eax
    16a3:	01 d0                	add    %edx,%eax
    16a5:	89 05 e9 1a 00 00    	mov    %eax,0x1ae9(%rip)        # 3194 <_ZL6msdata+0x4>
    16ab:	80 7d fc 00          	cmpb   $0x0,-0x4(%rbp)
    16af:	74 11                	je     16c2 <_Z18ProcessMousePacketv+0x1c3>
    16b1:	8b 05 dd 1a 00 00    	mov    0x1add(%rip),%eax        # 3194 <_ZL6msdata+0x4>
    16b7:	05 ff 00 00 00       	add    $0xff,%eax
    16bc:	89 05 d2 1a 00 00    	mov    %eax,0x1ad2(%rip)        # 3194 <_ZL6msdata+0x4>
    16c2:	8b 05 40 1b 00 00    	mov    0x1b40(%rip),%eax        # 3208 <_ZN6kvideo1WE>
    16c8:	83 e8 01             	sub    $0x1,%eax
    16cb:	89 45 ec             	mov    %eax,-0x14(%rbp)
    16ce:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    16d5:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
    16d9:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    16dd:	48 89 c6             	mov    %rax,%rsi
    16e0:	48 8d 05 a9 1a 00 00 	lea    0x1aa9(%rip),%rax        # 3190 <_ZL6msdata>
    16e7:	48 89 c7             	mov    %rax,%rdi
    16ea:	e8 53 03 00 00       	call   1a42 <_ZSt5clampIiERKT_S2_S2_S2_>
    16ef:	8b 00                	mov    (%rax),%eax
    16f1:	89 05 99 1a 00 00    	mov    %eax,0x1a99(%rip)        # 3190 <_ZL6msdata>
    16f7:	8b 05 0f 1b 00 00    	mov    0x1b0f(%rip),%eax        # 320c <_ZN6kvideo1HE>
    16fd:	83 e8 01             	sub    $0x1,%eax
    1700:	89 45 f4             	mov    %eax,-0xc(%rbp)
    1703:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    170a:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
    170e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    1712:	48 89 c6             	mov    %rax,%rsi
    1715:	48 8d 05 78 1a 00 00 	lea    0x1a78(%rip),%rax        # 3194 <_ZL6msdata+0x4>
    171c:	48 89 c7             	mov    %rax,%rdi
    171f:	e8 1e 03 00 00       	call   1a42 <_ZSt5clampIiERKT_S2_S2_S2_>
    1724:	8b 00                	mov    (%rax),%eax
    1726:	89 05 68 1a 00 00    	mov    %eax,0x1a68(%rip)        # 3194 <_ZL6msdata+0x4>
    172c:	c6 05 72 1a 00 00 00 	movb   $0x0,0x1a72(%rip)        # 31a5 <_ZL16MousePacketReady>
    1733:	b8 01 00 00 00       	mov    $0x1,%eax
    1738:	c9                   	leave
    1739:	c3                   	ret

000000000000173a <_ZL10mouse_initv>:
    173a:	55                   	push   %rbp
    173b:	48 89 e5             	mov    %rsp,%rbp
    173e:	48 83 ec 10          	sub    $0x10,%rsp
    1742:	be a8 00 00 00       	mov    $0xa8,%esi
    1747:	bf 64 00 00 00       	mov    $0x64,%edi
    174c:	e8 be fc ff ff       	call   140f <_ZN2IO4outbEth>
    1751:	e8 15 fd ff ff       	call   146b <_Z9MouseWaitv>
    1756:	be 20 00 00 00       	mov    $0x20,%esi
    175b:	bf 64 00 00 00       	mov    $0x64,%edi
    1760:	e8 aa fc ff ff       	call   140f <_ZN2IO4outbEth>
    1765:	e8 01 fd ff ff       	call   146b <_Z9MouseWaitv>
    176a:	bf 60 00 00 00       	mov    $0x60,%edi
    176f:	e8 40 fc ff ff       	call   13b4 <_ZN2IO3inbEt>
    1774:	88 45 ff             	mov    %al,-0x1(%rbp)
    1777:	80 4d ff 02          	orb    $0x2,-0x1(%rbp)
    177b:	e8 eb fc ff ff       	call   146b <_Z9MouseWaitv>
    1780:	be 60 00 00 00       	mov    $0x60,%esi
    1785:	bf 64 00 00 00       	mov    $0x64,%edi
    178a:	e8 80 fc ff ff       	call   140f <_ZN2IO4outbEth>
    178f:	e8 d7 fc ff ff       	call   146b <_Z9MouseWaitv>
    1794:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    1798:	89 c6                	mov    %eax,%esi
    179a:	bf 60 00 00 00       	mov    $0x60,%edi
    179f:	e8 6b fc ff ff       	call   140f <_ZN2IO4outbEth>
    17a4:	bf f6 00 00 00       	mov    $0xf6,%edi
    17a9:	e8 03 fd ff ff       	call   14b1 <_ZL10MouseWriteh>
    17ae:	e8 37 fd ff ff       	call   14ea <_Z9MouseReadv>
    17b3:	bf f4 00 00 00       	mov    $0xf4,%edi
    17b8:	e8 f4 fc ff ff       	call   14b1 <_ZL10MouseWriteh>
    17bd:	e8 28 fd ff ff       	call   14ea <_Z9MouseReadv>
    17c2:	90                   	nop
    17c3:	c9                   	leave
    17c4:	c3                   	ret

00000000000017c5 <_ZL11irq_handlerP10intframe_t>:
    17c5:	55                   	push   %rbp
    17c6:	48 89 e5             	mov    %rsp,%rbp
    17c9:	48 83 ec 20          	sub    $0x20,%rsp
    17cd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    17d1:	bf 60 00 00 00       	mov    $0x60,%edi
    17d6:	e8 d9 fb ff ff       	call   13b4 <_ZN2IO3inbEt>
    17db:	88 45 ff             	mov    %al,-0x1(%rbp)
    17de:	0f b6 05 bb 19 00 00 	movzbl 0x19bb(%rip),%eax        # 31a0 <_ZL10MouseCycle>
    17e5:	0f b6 c0             	movzbl %al,%eax
    17e8:	83 f8 02             	cmp    $0x2,%eax
    17eb:	74 70                	je     185d <_ZL11irq_handlerP10intframe_t+0x98>
    17ed:	83 f8 02             	cmp    $0x2,%eax
    17f0:	0f 8f 96 00 00 00    	jg     188c <_ZL11irq_handlerP10intframe_t+0xc7>
    17f6:	85 c0                	test   %eax,%eax
    17f8:	74 0a                	je     1804 <_ZL11irq_handlerP10intframe_t+0x3f>
    17fa:	83 f8 01             	cmp    $0x1,%eax
    17fd:	74 37                	je     1836 <_ZL11irq_handlerP10intframe_t+0x71>
    17ff:	e9 88 00 00 00       	jmp    188c <_ZL11irq_handlerP10intframe_t+0xc7>
    1804:	0f b6 05 9a 19 00 00 	movzbl 0x199a(%rip),%eax        # 31a5 <_ZL16MousePacketReady>
    180b:	84 c0                	test   %al,%al
    180d:	75 73                	jne    1882 <_ZL11irq_handlerP10intframe_t+0xbd>
    180f:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    1813:	83 e0 08             	and    $0x8,%eax
    1816:	85 c0                	test   %eax,%eax
    1818:	74 6b                	je     1885 <_ZL11irq_handlerP10intframe_t+0xc0>
    181a:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    181e:	88 05 7d 19 00 00    	mov    %al,0x197d(%rip)        # 31a1 <_ZL11MousePacket>
    1824:	0f b6 05 75 19 00 00 	movzbl 0x1975(%rip),%eax        # 31a0 <_ZL10MouseCycle>
    182b:	83 c0 01             	add    $0x1,%eax
    182e:	88 05 6c 19 00 00    	mov    %al,0x196c(%rip)        # 31a0 <_ZL10MouseCycle>
    1834:	eb 56                	jmp    188c <_ZL11irq_handlerP10intframe_t+0xc7>
    1836:	0f b6 05 68 19 00 00 	movzbl 0x1968(%rip),%eax        # 31a5 <_ZL16MousePacketReady>
    183d:	84 c0                	test   %al,%al
    183f:	75 47                	jne    1888 <_ZL11irq_handlerP10intframe_t+0xc3>
    1841:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    1845:	88 05 57 19 00 00    	mov    %al,0x1957(%rip)        # 31a2 <_ZL11MousePacket+0x1>
    184b:	0f b6 05 4e 19 00 00 	movzbl 0x194e(%rip),%eax        # 31a0 <_ZL10MouseCycle>
    1852:	83 c0 01             	add    $0x1,%eax
    1855:	88 05 45 19 00 00    	mov    %al,0x1945(%rip)        # 31a0 <_ZL10MouseCycle>
    185b:	eb 2f                	jmp    188c <_ZL11irq_handlerP10intframe_t+0xc7>
    185d:	0f b6 05 41 19 00 00 	movzbl 0x1941(%rip),%eax        # 31a5 <_ZL16MousePacketReady>
    1864:	84 c0                	test   %al,%al
    1866:	75 23                	jne    188b <_ZL11irq_handlerP10intframe_t+0xc6>
    1868:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    186c:	88 05 31 19 00 00    	mov    %al,0x1931(%rip)        # 31a3 <_ZL11MousePacket+0x2>
    1872:	c6 05 2c 19 00 00 01 	movb   $0x1,0x192c(%rip)        # 31a5 <_ZL16MousePacketReady>
    1879:	c6 05 20 19 00 00 00 	movb   $0x0,0x1920(%rip)        # 31a0 <_ZL10MouseCycle>
    1880:	eb 0a                	jmp    188c <_ZL11irq_handlerP10intframe_t+0xc7>
    1882:	90                   	nop
    1883:	eb 07                	jmp    188c <_ZL11irq_handlerP10intframe_t+0xc7>
    1885:	90                   	nop
    1886:	eb 04                	jmp    188c <_ZL11irq_handlerP10intframe_t+0xc7>
    1888:	90                   	nop
    1889:	eb 01                	jmp    188c <_ZL11irq_handlerP10intframe_t+0xc7>
    188b:	90                   	nop
    188c:	90                   	nop
    188d:	c9                   	leave
    188e:	c3                   	ret

000000000000188f <_ZL11driver_mainPv>:
    188f:	55                   	push   %rbp
    1890:	48 89 e5             	mov    %rsp,%rbp
    1893:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    189a:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
    18a1:	e8 94 fe ff ff       	call   173a <_ZL10mouse_initv>
    18a6:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    18ad:	b8 00 00 00 00       	mov    $0x0,%eax
    18b2:	b9 18 00 00 00       	mov    $0x18,%ecx
    18b7:	48 89 d7             	mov    %rdx,%rdi
    18ba:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    18bd:	e8 3d fc ff ff       	call   14ff <_Z18ProcessMousePacketv>
    18c2:	84 c0                	test   %al,%al
    18c4:	74 f7                	je     18bd <_ZL11driver_mainPv+0x2e>
    18c6:	48 8b 05 f3 18 00 00 	mov    0x18f3(%rip),%rax        # 31c0 <_ZN6kinput11writeMsDataE>
    18cd:	48 8d 15 bc 18 00 00 	lea    0x18bc(%rip),%rdx        # 3190 <_ZL6msdata>
    18d4:	48 89 d7             	mov    %rdx,%rdi
    18d7:	ff d0                	call   *%rax
    18d9:	48 8b 15 f8 18 00 00 	mov    0x18f8(%rip),%rdx        # 31d8 <_ZN6kinput15readMsCallbacksE>
    18e0:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    18e7:	48 89 c7             	mov    %rax,%rdi
    18ea:	ff d2                	call   *%rdx
    18ec:	0f b6 05 a5 18 00 00 	movzbl 0x18a5(%rip),%eax        # 3198 <_ZL6msdata+0x8>
    18f3:	0f b6 c0             	movzbl %al,%eax
    18f6:	83 f8 01             	cmp    $0x1,%eax
    18f9:	75 62                	jne    195d <_ZL11driver_mainPv+0xce>
    18fb:	0f b6 05 99 18 00 00 	movzbl 0x1899(%rip),%eax        # 319b <_ZL6msdata+0xb>
    1902:	0f b6 c0             	movzbl %al,%eax
    1905:	85 c0                	test   %eax,%eax
    1907:	75 54                	jne    195d <_ZL11driver_mainPv+0xce>
    1909:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1910:	eb 45                	jmp    1957 <_ZL11driver_mainPv+0xc8>
    1912:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1915:	48 63 d0             	movslq %eax,%rdx
    1918:	48 89 d0             	mov    %rdx,%rax
    191b:	48 01 c0             	add    %rax,%rax
    191e:	48 01 d0             	add    %rdx,%rax
    1921:	48 c1 e0 03          	shl    $0x3,%rax
    1925:	48 01 e8             	add    %rbp,%rax
    1928:	48 83 e8 70          	sub    $0x70,%rax
    192c:	48 8b 00             	mov    (%rax),%rax
    192f:	48 85 c0             	test   %rax,%rax
    1932:	74 1f                	je     1953 <_ZL11driver_mainPv+0xc4>
    1934:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1937:	48 63 d0             	movslq %eax,%rdx
    193a:	48 89 d0             	mov    %rdx,%rax
    193d:	48 01 c0             	add    %rax,%rax
    1940:	48 01 d0             	add    %rdx,%rax
    1943:	48 c1 e0 03          	shl    $0x3,%rax
    1947:	48 01 e8             	add    %rbp,%rax
    194a:	48 83 e8 70          	sub    $0x70,%rax
    194e:	48 8b 00             	mov    (%rax),%rax
    1951:	ff d0                	call   *%rax
    1953:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1957:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    195b:	7e b5                	jle    1912 <_ZL11driver_mainPv+0x83>
    195d:	0f b6 05 36 18 00 00 	movzbl 0x1836(%rip),%eax        # 319a <_ZL6msdata+0xa>
    1964:	0f b6 c0             	movzbl %al,%eax
    1967:	83 f8 01             	cmp    $0x1,%eax
    196a:	75 62                	jne    19ce <_ZL11driver_mainPv+0x13f>
    196c:	0f b6 05 2a 18 00 00 	movzbl 0x182a(%rip),%eax        # 319d <_ZL6msdata+0xd>
    1973:	0f b6 c0             	movzbl %al,%eax
    1976:	85 c0                	test   %eax,%eax
    1978:	75 54                	jne    19ce <_ZL11driver_mainPv+0x13f>
    197a:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    1981:	eb 45                	jmp    19c8 <_ZL11driver_mainPv+0x139>
    1983:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1986:	48 63 d0             	movslq %eax,%rdx
    1989:	48 89 d0             	mov    %rdx,%rax
    198c:	48 01 c0             	add    %rax,%rax
    198f:	48 01 d0             	add    %rdx,%rax
    1992:	48 c1 e0 03          	shl    $0x3,%rax
    1996:	48 01 e8             	add    %rbp,%rax
    1999:	48 83 e8 60          	sub    $0x60,%rax
    199d:	48 8b 00             	mov    (%rax),%rax
    19a0:	48 85 c0             	test   %rax,%rax
    19a3:	74 1f                	je     19c4 <_ZL11driver_mainPv+0x135>
    19a5:	8b 45 f8             	mov    -0x8(%rbp),%eax
    19a8:	48 63 d0             	movslq %eax,%rdx
    19ab:	48 89 d0             	mov    %rdx,%rax
    19ae:	48 01 c0             	add    %rax,%rax
    19b1:	48 01 d0             	add    %rdx,%rax
    19b4:	48 c1 e0 03          	shl    $0x3,%rax
    19b8:	48 01 e8             	add    %rbp,%rax
    19bb:	48 83 e8 60          	sub    $0x60,%rax
    19bf:	48 8b 00             	mov    (%rax),%rax
    19c2:	ff d0                	call   *%rax
    19c4:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    19c8:	83 7d f8 03          	cmpl   $0x3,-0x8(%rbp)
    19cc:	7e b5                	jle    1983 <_ZL11driver_mainPv+0xf4>
    19ce:	48 8b 05 0b 18 00 00 	mov    0x180b(%rip),%rax        # 31e0 <_ZN7kthread5yieldE>
    19d5:	ff d0                	call   *%rax
    19d7:	e9 e1 fe ff ff       	jmp    18bd <_ZL11driver_mainPv+0x2e>

00000000000019dc <_ZL11driver_readPvm>:
    19dc:	55                   	push   %rbp
    19dd:	48 89 e5             	mov    %rsp,%rbp
    19e0:	48 83 ec 10          	sub    $0x10,%rsp
    19e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    19e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    19ec:	48 83 7d f0 0f       	cmpq   $0xf,-0x10(%rbp)
    19f1:	77 07                	ja     19fa <_ZL11driver_readPvm+0x1e>
    19f3:	b8 00 00 00 00       	mov    $0x0,%eax
    19f8:	eb 1e                	jmp    1a18 <_ZL11driver_readPvm+0x3c>
    19fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19fe:	48 8b 15 8b 17 00 00 	mov    0x178b(%rip),%rdx        # 3190 <_ZL6msdata>
    1a05:	48 89 10             	mov    %rdx,(%rax)
    1a08:	48 8b 15 87 17 00 00 	mov    0x1787(%rip),%rdx        # 3196 <_ZL6msdata+0x6>
    1a0f:	48 89 50 06          	mov    %rdx,0x6(%rax)
    1a13:	b8 10 00 00 00       	mov    $0x10,%eax
    1a18:	c9                   	leave
    1a19:	c3                   	ret

0000000000001a1a <_ZN3vecILm2EiEC1Eii>:
    1a1a:	55                   	push   %rbp
    1a1b:	48 89 e5             	mov    %rsp,%rbp
    1a1e:	48 83 ec 10          	sub    $0x10,%rsp
    1a22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1a26:	89 75 f4             	mov    %esi,-0xc(%rbp)
    1a29:	89 55 f0             	mov    %edx,-0x10(%rbp)
    1a2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a30:	8b 55 f4             	mov    -0xc(%rbp),%edx
    1a33:	89 10                	mov    %edx,(%rax)
    1a35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a39:	8b 55 f0             	mov    -0x10(%rbp),%edx
    1a3c:	89 50 04             	mov    %edx,0x4(%rax)
    1a3f:	90                   	nop
    1a40:	c9                   	leave
    1a41:	c3                   	ret

0000000000001a42 <_ZSt5clampIiERKT_S2_S2_S2_>:
    1a42:	55                   	push   %rbp
    1a43:	48 89 e5             	mov    %rsp,%rbp
    1a46:	48 83 ec 20          	sub    $0x20,%rsp
    1a4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1a4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1a52:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    1a56:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1a5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a5e:	48 89 d6             	mov    %rdx,%rsi
    1a61:	48 89 c7             	mov    %rax,%rdi
    1a64:	e8 c6 00 00 00       	call   1b2f <_ZSt3minIiERKT_S2_S2_>
    1a69:	48 89 c2             	mov    %rax,%rdx
    1a6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1a70:	48 89 d6             	mov    %rdx,%rsi
    1a73:	48 89 c7             	mov    %rax,%rdi
    1a76:	e8 e0 00 00 00       	call   1b5b <_ZSt3maxIiERKT_S2_S2_>
    1a7b:	c9                   	leave
    1a7c:	c3                   	ret

0000000000001a7d <_Z7kmemsetIcEPvS0_T_m>:
    1a7d:	55                   	push   %rbp
    1a7e:	48 89 e5             	mov    %rsp,%rbp
    1a81:	48 83 ec 28          	sub    $0x28,%rsp
    1a85:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1a89:	89 f0                	mov    %esi,%eax
    1a8b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    1a8f:	88 45 e4             	mov    %al,-0x1c(%rbp)
    1a92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a96:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1a9a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1a9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1aa2:	48 01 d0             	add    %rdx,%rax
    1aa5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1aa9:	eb 12                	jmp    1abd <_Z7kmemsetIcEPvS0_T_m+0x40>
    1aab:	0f b6 55 e4          	movzbl -0x1c(%rbp),%edx
    1aaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1ab3:	48 8d 48 01          	lea    0x1(%rax),%rcx
    1ab7:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
    1abb:	88 10                	mov    %dl,(%rax)
    1abd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1ac1:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    1ac5:	72 e4                	jb     1aab <_Z7kmemsetIcEPvS0_T_m+0x2e>
    1ac7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1acb:	c9                   	leave
    1acc:	c3                   	ret

0000000000001acd <_Z7kmemcpyIcEPvS0_PKvm>:
    1acd:	55                   	push   %rbp
    1ace:	48 89 e5             	mov    %rsp,%rbp
    1ad1:	48 83 ec 38          	sub    $0x38,%rsp
    1ad5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1ad9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    1add:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    1ae1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1ae5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1ae9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1aed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1af1:	48 01 d0             	add    %rdx,%rax
    1af4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1af8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1afc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1b00:	eb 1d                	jmp    1b1f <_Z7kmemcpyIcEPvS0_PKvm+0x52>
    1b02:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b06:	48 8d 50 01          	lea    0x1(%rax),%rdx
    1b0a:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    1b0e:	0f b6 10             	movzbl (%rax),%edx
    1b11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b15:	48 8d 48 01          	lea    0x1(%rax),%rcx
    1b19:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
    1b1d:	88 10                	mov    %dl,(%rax)
    1b1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b23:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    1b27:	72 d9                	jb     1b02 <_Z7kmemcpyIcEPvS0_PKvm+0x35>
    1b29:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1b2d:	c9                   	leave
    1b2e:	c3                   	ret

0000000000001b2f <_ZSt3minIiERKT_S2_S2_>:
    1b2f:	55                   	push   %rbp
    1b30:	48 89 e5             	mov    %rsp,%rbp
    1b33:	48 83 ec 10          	sub    $0x10,%rsp
    1b37:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1b3b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1b3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b43:	8b 10                	mov    (%rax),%edx
    1b45:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b49:	8b 00                	mov    (%rax),%eax
    1b4b:	39 c2                	cmp    %eax,%edx
    1b4d:	7d 06                	jge    1b55 <_ZSt3minIiERKT_S2_S2_+0x26>
    1b4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b53:	eb 04                	jmp    1b59 <_ZSt3minIiERKT_S2_S2_+0x2a>
    1b55:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b59:	c9                   	leave
    1b5a:	c3                   	ret

0000000000001b5b <_ZSt3maxIiERKT_S2_S2_>:
    1b5b:	55                   	push   %rbp
    1b5c:	48 89 e5             	mov    %rsp,%rbp
    1b5f:	48 83 ec 10          	sub    $0x10,%rsp
    1b63:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1b67:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1b6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b6f:	8b 10                	mov    (%rax),%edx
    1b71:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b75:	8b 00                	mov    (%rax),%eax
    1b77:	39 c2                	cmp    %eax,%edx
    1b79:	7e 06                	jle    1b81 <_ZSt3maxIiERKT_S2_S2_+0x26>
    1b7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b7f:	eb 04                	jmp    1b85 <_ZSt3maxIiERKT_S2_S2_+0x2a>
    1b81:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b85:	c9                   	leave
    1b86:	c3                   	ret

0000000000001b87 <_Z41__static_initialization_and_destruction_0v>:
    1b87:	55                   	push   %rbp
    1b88:	48 89 e5             	mov    %rsp,%rbp
    1b8b:	48 83 ec 10          	sub    $0x10,%rsp
    1b8f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    1b93:	ba 80 00 00 00       	mov    $0x80,%edx
    1b98:	be 80 00 00 00       	mov    $0x80,%esi
    1b9d:	48 89 c7             	mov    %rax,%rdi
    1ba0:	e8 75 fe ff ff       	call   1a1a <_ZN3vecILm2EiEC1Eii>
    1ba5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    1ba9:	48 89 c6             	mov    %rax,%rsi
    1bac:	48 8d 05 dd 15 00 00 	lea    0x15dd(%rip),%rax        # 3190 <_ZL6msdata>
    1bb3:	48 89 c7             	mov    %rax,%rdi
    1bb6:	e8 87 f5 ff ff       	call   1142 <_ZN6kinput6MsDataC1ERK3vecILm2EiE>
    1bbb:	90                   	nop
    1bbc:	c9                   	leave
    1bbd:	c3                   	ret

0000000000001bbe <_GLOBAL__sub_I__ZN3CPU10installISRE>:
    1bbe:	55                   	push   %rbp
    1bbf:	48 89 e5             	mov    %rsp,%rbp
    1bc2:	e8 c0 ff ff ff       	call   1b87 <_Z41__static_initialization_and_destruction_0v>
    1bc7:	5d                   	pop    %rbp
    1bc8:	c3                   	ret






